{"version":3,"sources":["GameContext.js","components/GameBoard/Display.js","components/GameBoard/Target.js","components/GameBoard/Turns.js","components/GameBoard/GameStatus.js","components/GameBoard/Cheat.js","components/GameBoard/Buttons.js","components/Actions/Append.js","components/Actions/Add.js","components/Actions/Subtract.js","components/Actions/Divide.js","components/Actions/Multiply.js","components/Actions/Reverse.js","components/Actions/Sum.js","components/GameBoard.js","App.js","serviceWorker.js","index.js"],"names":["GameContext","createContext","Display","react_default","a","createElement","Consumer","_ref","currentResult","className","Target","targetResult","Turns","maxTurns","currentTurns","GameStatus","gameState","initialiseGame","resetGame","Row","Col","xs","toString","toLowerCase","GameBoard_Turns","GameBoard_Target","Cheat","takenTurns","setCheat","cheat","onClick","map","button","i","key","Buttons","buttons","Button","AppendAction","haveTurn","isPossible","getNextResult","number","disabled","title","AppendActionContainer","Math","floor","random","result","parseInt","value","console","log","hash","possible","_ref2","Append_AppendAction","AddAction","AddActionContainer","Add_AddAction","SubtractAction","SubtractActionContainer","Subtract_SubtractAction","DivideAction","DivideActionContainer","props","Divide_DivideAction","MultiplyAction","MultiplyActionContainer","Multiply_MultiplyAction","ReverseAction","ReverseActionContainer","Object","toConsumableArray","filter","x","reverse","join","length","Reverse_ReverseAction","SumAction","SumActionContainer","reduce","y","Sum_SumAction","GameBoard","_useContext","useContext","setGameState","useEffect","GameBoard_GameStatus","GameBoard_Display","GameBoard_Buttons","GameBoard_Cheat","GameBoardContainer","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","limitButtons","setLimitButtons","_useState7","_useState8","setButtons","_useState9","_useState10","setTakenTurns","_useState11","_useState12","setCurrentResult","_useState13","_useState14","setTargetResult","_useState15","_useState16","setMaxTurns","_useState17","_useState18","setCurrentTurns","_useState19","_useState20","startValue","setStartValue","_useState21","_useState22","limitTurns","setLimitTurns","getButton","j","NewButton","possible_buttons","Provider","action","startingValue","new_buttons","limit","_loop","tmp","find","concat","newMaxTurns","turns","GameBoard_GameBoard","App","src_components_GameBoard","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f402a76d.chunk.js","sourcesContent":["import { createContext } from 'react'\nexport const GameContext = createContext({})\n","import React from 'react'\nimport { GameContext }  from '../../GameContext'\nimport '../GameBoard.css'\n\nfunction Display() {\n    return (\n        <GameContext.Consumer>\n            {({currentResult}) => (<div className={'display'}>{currentResult}</div>)}\n        </GameContext.Consumer>\n    )\n}\n\nexport default Display","import React from 'react'\nimport { GameContext }  from '../../GameContext'\nimport '../GameBoard.css'\n\nfunction Target() {\n    return (\n        <GameContext.Consumer>\n            {({targetResult}) => (<div className={'target'}>Goal: {targetResult}</div>)}\n        </GameContext.Consumer>\n    )\n}\n\nexport default Target","import React from 'react'\nimport { GameContext }  from '../../GameContext'\nimport '../GameBoard.css'\n\nfunction Turns() {\n    return (\n        <GameContext.Consumer>\n            {({maxTurns, currentTurns}) => (<div className={'moves'}>Moves: {maxTurns - currentTurns} </div>)}\n        </GameContext.Consumer>\n    )\n}\n\nexport default Turns","import React from \"react\";\nimport { GameContext } from \"../../GameContext\";\nimport \"../GameBoard.css\";\nimport Target from \"../GameBoard/Target\";\nimport Turns from \"../GameBoard/Turns\";\n\nimport { Row, Col, Button } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nfunction GameStatus() {\n  return (\n    <GameContext.Consumer>\n      {({ gameState, initialiseGame, currentTurns, resetGame }) => (\n        <Row>\n          <Col xs={4} className={'game-status ' + gameState.toString().toLowerCase()}>\n          {gameState === \"ready\" ? <div className={'playing'}>Playing</div> : <div>{gameState}</div>}\n\n\n          </Col>\n          <Col xs={4}>\n            <Turns />\n          </Col>\n          <Col xs={4}>\n            <Target />\n          </Col>\n\n        </Row>\n      )}\n    </GameContext.Consumer>\n  );\n}\n\nexport default GameStatus;\n","import React,  { useState }  from 'react'\nimport { GameContext }  from '../../GameContext'\nimport '../GameBoard.css'\n\nfunction Cheat() {\n\n    return (\n      <GameContext.Consumer>\n        {({ takenTurns, setCheat, cheat }) => (<div>\n\n            <button onClick={()=>setCheat(!cheat)}>{cheat ? 'disable':'enable'} cheat mode</button>\n\n            {cheat ?  \n                (<div className={'buttons'}>{takenTurns.map((button, i) => <div key={'step-' + i}>{button.button}</div>)}</div>) : \n                null}\n            </div>            \n        )}\n      </GameContext.Consumer>\n    );\n  }\n  \n\n  export default Cheat","import React from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Row, Col, Button } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../GameBoard.css\";\n\n\nfunction Buttons() {\n  return (\n    <GameContext.Consumer>\n      {({ buttons, initialiseGame, resetGame, gameState, cheat }) => (\n        <Row className={\"buttons\"}>\n          <Col className={\"game-button\"} xs={4}>\n            {(cheat || gameState == 'Won') && <Button onClick={initialiseGame}>NEW</Button>}\n          </Col>\n          <Col className={\"game-button\"} xs={4}>\n            {buttons && buttons[0] && buttons[0].button}\n          </Col>\n          <Col className={\"game-button\"} xs={4}>\n            <Button onClick={resetGame}>RESET</Button>\n          </Col>\n\n          <Col className={\"game-button\"} xs={4} />\n          <Col className={\"game-button\"} xs={4}>\n            {buttons && buttons[1] && buttons[1].button}\n          </Col>\n          <Col className={\"game-button\"} xs={4}>\n            {buttons && buttons[2] && buttons[2].button}\n          </Col>\n\n          <Col className={\"game-button\"} xs={4} />\n          <Col className={\"game-button\"} xs={4}>\n            {buttons && buttons[3] && buttons[3].button}\n          </Col>\n          <Col className={\"game-button\"} xs={4}>\n            {buttons && buttons[4] && buttons[4].button}\n          </Col>\n        </Row>\n      )}\n    </GameContext.Consumer>\n  );\n}\nexport default Buttons;\n","import React from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Button } from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../GameBoard.css\";\n\nconst AppendAction = ({\n  haveTurn,\n  gameState,\n  currentResult,\n  isPossible,\n  getNextResult,\n  number\n}) => {\n\n  return (\n    <Button\n      className={\"append\"}\n      disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n      onClick={() => haveTurn(getNextResult)}\n      title=\"Append digit to end - Apending 2 to 21 = 212\"\n    >\n      {number}\n    </Button>\n  );\n};\nconst AppendActionContainer = () => {\n  const number =Math.floor(Math.random() * 9) + 1;\n\n\n  const getNextResult = result => parseInt(result.toString() + number.toString());\n\n  const isPossible = (value) => {\n    let possible = true\n    console.log(\"Append Is Possible\",value, possible)\n    \n    return possible\n  }\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"append-\" + number,\n\n    possible: (value) => {\n      return isPossible(value);\n    },\n\n    button: (\n      <GameContext.Consumer>\n        {({ haveTurn, gameState, currentResult }) => <AppendAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} number={number} isPossible={isPossible} getNextResult={getNextResult} />}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport default AppendActionContainer;\n","import React from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Button } from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../GameBoard.css\";\n\nconst AddAction = ({\n  haveTurn,\n  gameState,\n  currentResult,\n  isPossible,\n  getNextResult,\n  number\n}) => {\n  return (\n    <Button\n      className={\"add\"}\n      disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n      onClick={() => haveTurn(getNextResult)}\n      title=\"Add digit to end - Apending 2 to 21 = 212\"\n    >\n     + {number}\n    </Button>\n  );\n};\nconst AddActionContainer = () => {\n  const number =Math.floor(Math.random() * 9) + 1;\n\n\n  const getNextResult = result => parseInt(result + number);\n\n  const isPossible = (value) => {\n    let possible = true\n    console.log(\"Add Is Possible\",value, possible)\n    \n    return possible\n  }  \n\n  return {\n    getNextResult: getNextResult,\n    hash: \"add-\" + number,\n\n    possible: (value) => {\n      return isPossible(value);\n    },\n\n    button: (\n      <GameContext.Consumer>\n        {({ haveTurn, gameState, currentResult }) => <AddAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} number={number} isPossible={isPossible} getNextResult={getNextResult} />}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport default AddActionContainer;\n","import React from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Button } from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../GameBoard.css\";\n\nconst SubtractAction = ({\n  haveTurn,\n  gameState,\n  currentResult,\n  isPossible,\n  getNextResult,\n  number\n}) => {\n  return (\n    <Button\n      className={\"subtract\"}\n      disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n      onClick={() => haveTurn(getNextResult)}\n      title=\"Subtract button value from current result\"\n    >\n      - {number}\n    </Button>\n  );\n};\nconst SubtractActionContainer = () => {\n  const number =Math.floor(Math.random() * 9) + 1;\n\n\n  const getNextResult = result => parseInt(result - number);\n\n  const isPossible = (value) => {\n    let possible = true\n    console.log(\"Subtract Is Possible\",value, possible)\n    \n    return possible\n  }  \n\n  return {\n    getNextResult: getNextResult,\n    hash: \"subtract-\" + number,\n\n    possible: (value) => {\n      return isPossible();\n    },\n\n    button: (\n      <GameContext.Consumer>\n        {({ haveTurn, gameState, currentResult }) => <SubtractAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} number={number} isPossible={isPossible} getNextResult={getNextResult} />}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport default SubtractActionContainer;\n","import React, { useContext } from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Button } from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../GameBoard.css\";\n\nconst DivideAction = ({\n  haveTurn,\n  gameState,\n  currentResult,\n  isPossible,\n  getNextResult,\n  number\n}) => {\n  return (\n    <Button\n      className={\"divide\"}\n      disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n      onClick={() => haveTurn(getNextResult)}\n      title=\"Divide current result by button value\"\n    >\n       / {number}\n    </Button>\n  );\n};\n\nconst DivideActionContainer = props => {\n    \n\n  const number =Math.floor(Math.random() * 3) + 1;\n\n\n  const getNextResult = result => parseInt(result / number);\n\n\n  const isPossible = (value) => {\n    let possible = value > 1 && value % number === 0;\n    console.log(\"Divide Is Possible\",value, possible)\n    \n    return possible\n  }  \n\n  return {\n    getNextResult: getNextResult,\n    hash: \"divide-\" + number,\n\n    possible: (value) =>  isPossible(value),\n\n    button: (\n      <GameContext.Consumer>\n        {({ haveTurn, gameState, currentResult }) => <DivideAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} number={number} isPossible={isPossible} getNextResult={getNextResult} />}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport default DivideActionContainer;\n","import React  from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Button } from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../GameBoard.css\";\n\nconst MultiplyAction = ({\n  haveTurn,\n  gameState,\n  currentResult,\n  isPossible,\n  getNextResult,\n  number\n}) => {\n  return (\n    <Button\n      className={\"multiply\"}\n      disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n      onClick={() => haveTurn(getNextResult)}\n      title=\"Multiply current result by button value\"\n    >\n      X {number}\n    </Button>\n  );\n};\nconst MultiplyActionContainer = () => {\n  const number =Math.floor(Math.random() * 3) + 2;\n\n  const getNextResult = result => parseInt(result * number);\n\n  \n  const isPossible = (value) => {\n    let possible = value > 0\n    console.log(\"Multiply Is Possible\",value, possible)\n    \n    return possible\n  }  \n\n  return {\n    getNextResult: getNextResult,\n    hash: \"multiply-\" + number,\n\n    possible: (value) => {\n      return isPossible(value);\n    },\n\n    button: (\n      <GameContext.Consumer>\n        {({ haveTurn, gameState, currentResult }) => <MultiplyAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} number={number} isPossible={isPossible} getNextResult={getNextResult} />}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport default MultiplyActionContainer;\n","import React from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Button } from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../GameBoard.css\";\n\nconst ReverseAction = ({\n  haveTurn,\n  gameState,\n  currentResult,\n  isPossible,\n  getNextResult,\n\n}) => {\n\n  return (\n    <Button\n      className={\"reverse\"}\n      disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n      onClick={() => haveTurn(getNextResult)}\n      title=\"Reverse numbers 123 = 321\"\n    >\n      &lt;-&gt;\n    </Button>\n  );\n};\n\n\nconst ReverseActionContainer = () => {\n  const getNextResult = result =>\n    parseInt(\n      (result < 0 ? \"-\" : \"\") +\n        [...result.toString()]\n          .filter(x => x.toString() !== \"-\")\n          .reverse()\n          .join(\"\")\n    );\n\n  const isPossible = (value) => {\n    let possible = value.toString().length > 1;\n    console.log(\"Reverse Is Possible\",value, possible)\n    \n    return possible\n  }  \n\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"reverse\",\n\n    possible: (value) => {\n      return isPossible(value);\n    },\n\n    button: (\n      <GameContext.Consumer>\n        {({ haveTurn, gameState, currentResult }) => (\n          <ReverseAction\n            currentResult={currentResult}\n            haveTurn={haveTurn}\n            gameState={gameState}\n            isPossible={isPossible}\n            getNextResult={getNextResult}\n          />\n        )}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport default ReverseActionContainer;\n","import React, { useContext } from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Button } from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../GameBoard.css\";\n\nconst SumAction = ({\n  haveTurn,\n  gameState,\n  currentResult,\n  isPossible,\n  getNextResult\n}) => {\n  return (\n    <Button\n      className={\"sum\"}\n      disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n      onClick={() => haveTurn(getNextResult)}\n            title=\"Sum numbers - 13 = 1+3 = 4\"\n>\n      SUM\n    </Button>\n  );\n};\nconst SumActionContainer = () => {\n\n  const getNextResult = result => [...result.toString()].reduce((x, y) => parseInt(x) + parseInt(y));\n\n  const isPossible = (value) => {\n    let possible =  value.toString().length > 1;\n    console.log(\"Sum Is Possible\",value, possible)\n    \n    return possible\n  }  \n\n  return {\n    getNextResult: getNextResult,\n    hash: \"sum\",\n\n    possible: (value) => {\n      return isPossible(value);\n    },\n\n    button: (\n      <GameContext.Consumer>\n        {({ haveTurn, gameState, currentResult }) => <SumAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} isPossible={isPossible} getNextResult={getNextResult} />}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport default SumActionContainer;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { GameContext } from \"../GameContext\";\nimport Display from \"./GameBoard/Display\";\nimport GameStatus from \"./GameBoard/GameStatus\";\nimport Cheat from \"./GameBoard/Cheat\";\nimport Buttons from \"./GameBoard/Buttons\";\nimport AppendAction from \"./Actions/Append\";\nimport AddAction from \"./Actions/Add\";\nimport SubtractAction from \"./Actions/Subtract\";\nimport DivideAction from \"./Actions/Divide\";\nimport MultiplyAction from \"./Actions/Multiply\";\nimport ReverseAction from \"./Actions/Reverse\";\nimport SumAction from \"./Actions/Sum\";\n\nconst GameBoard = () => {\n  const {\n    gameState,\n    setGameState,\n    targetResult,\n    currentTurns,\n    maxTurns,\n    currentResult,\n    initialiseGame,\n    setCheat,\n    cheat\n  } = useContext(GameContext);\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    // Update the document title using the browser API\n    currentTurns === maxTurns &&\n      setGameState(currentResult === targetResult ? \"Won\" : \"Lost\");\n\n    console.log(\"gameState\", gameState);\n    gameState === \"init\" && initialiseGame();\n\n  });\n\n \n\n\n  // setButtons([...buttons, <AddButton />]);\n\n  //   setState({ ...state, buttons: \"hello\" })\n  //   <AppendButton />\n\n  return (\n    <div className={\"gameboard\"}>\n      <GameStatus />\n      <Display />\n      <Buttons />\n      <Cheat />\n    </div>\n  );\n};\n\nconst GameBoardContainer = props => {\n\n  const [cheat, setCheat] = useState(true)\n\n  const [gameState, setGameState] = useState(\"init\");\n\n  const [limitButtons, setLimitButtons] = useState(5);\n\n  const [buttons, setButtons] = useState([]);\n  const [takenTurns, setTakenTurns] = useState([]);\n\n  const [currentResult, setCurrentResult] = useState(0);\n\n  const [targetResult, setTargetResult] = useState(0);\n  const [maxTurns, setMaxTurns] = useState(0);\n\n  const [currentTurns, setCurrentTurns] = useState(0);\n\n  const [startValue, setStartValue] = useState(0);\n\n  const [limitTurns, setLimitTurns] = useState(0);\n\n  \n  const resetGame = () => {\n    setCurrentTurns(0);\n    setCurrentResult(startValue);\n    setGameState(\"ready\");\n  };\n\n  const haveTurn = action => {\n    setCurrentTurns(currentTurns + 1);\n    setCurrentResult(action);\n  };\n  const getButton = j => {\n    let NewButton = possible_buttons[~~(possible_buttons.length * Math.random())]\n\n    return NewButton();\n  };\n\n  const possible_buttons = [\n    AddAction,\n    AppendAction,\n    SubtractAction,\n    ReverseAction,\n    SumAction,\n    MultiplyAction,\n    DivideAction\n  ];\n\n\n  //   const targetTurn = action => setTargetResult(action);\n  const initialiseGame = () => {\n    setCurrentTurns(0);\n    const startingValue = Math.floor(Math.random() * 100);\n    setStartValue(startingValue);\n    setCurrentResult(startingValue);\n    setTargetResult(startingValue);\n\n    let i = 0; // failsafe\n    let new_buttons = [];\n\n    // get random number of possible buttons\n    let limit = Math.floor(Math.random() * limitButtons) + 1;\n    while (new_buttons.length < limit && i++ < 100) {\n      let tmp = getButton(i);\n\n      // don't include the same button twice\n      if (new_buttons.find(button => button.hash === tmp.hash)) {\n        continue;\n      }\n\n      new_buttons = [...new_buttons, tmp];\n    }\n\n    // store new buttons\n    setButtons(new_buttons);\n\n    // generate some turns\n    const newMaxTurns = Math.floor(Math.random() * limitTurns) + 3;\n    setMaxTurns(newMaxTurns);\n    let x = startingValue;\n    i = 0; // failsafe\n    let turns = [];\n    while (turns.length < newMaxTurns && i++ < 100) {\n      let button = new_buttons[~~(new_buttons.length * Math.random())];\n\n      // can we use this button with the 'current result' ?\n      let possible = button.possible(x);\n\n      // if we can't take the action, don't use button\n      if (!possible) continue;\n\n      turns = [...turns, button];\n\n      x = button.getNextResult(x) \n      console.log('x', x)\n    }\n    setTargetResult(x)  \n\n    // store the turns that were taken to get to the result (cheat mode)\n    setTakenTurns(turns);\n\n    setGameState(\"ready\");\n  };\n  return (\n    <GameContext.Provider\n      value={{\n        limitButtons,\n        setLimitButtons,  \n        haveTurn,\n        gameState,\n        setGameState,\n        currentResult,\n        setCurrentResult,\n        targetResult,\n        setTargetResult,\n        buttons,\n        setButtons,\n        takenTurns,\n        setTakenTurns,\n        currentTurns,\n        setCurrentTurns,\n        resetGame,\n        maxTurns,\n        setMaxTurns,\n        startValue,\n        setStartValue,\n        limitTurns,\n        setLimitTurns,\n        initialiseGame,\n        getButton,\n        setCheat, \n        cheat\n      }}\n    >\n      {\" \"}\n      <GameBoard />\n    </GameContext.Provider>\n  );\n};\n\nexport default GameBoardContainer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport GameBoard from './components/GameBoard'\n\nclass App extends Component {\n  render() {\n    return (\n      <GameBoard />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}