{"ast":null,"code":"import _toConsumableArray from \"/app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/app/src/components/Actions/Sum.js\";\nimport React, { useState } from \"react\";\nimport { GameContext } from \"../../GameContext\";\nimport { Button } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../GameBoard.css\";\n\nvar SumAction = function SumAction(_ref) {\n  var haveTurn = _ref.haveTurn,\n      gameState = _ref.gameState,\n      currentResult = _ref.currentResult,\n      isPossible = _ref.isPossible,\n      getNextResult = _ref.getNextResult,\n      number = _ref.number;\n  return React.createElement(Button, {\n    className: \"sum\",\n    disabled: !isPossible(currentResult) || gameState !== \"ready\",\n    onClick: function onClick() {\n      return haveTurn(getNextResult);\n    },\n    title: \"Sum numbers - 13 = 1+3 = 4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"SUM\");\n};\n\nvar SumActionContainer = function SumActionContainer(props) {\n  var getNextResult = function getNextResult(result) {\n    return _toConsumableArray(result.toString()).reduce(function (x, y) {\n      return parseInt(x) + parseInt(y);\n    });\n  };\n\n  var isPossible = function isPossible(value) {\n    return value.toString().length > 1;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"sum\",\n    possible: function possible(value) {\n      return isPossible(value);\n    },\n    button: React.createElement(GameContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, function (_ref2) {\n      var haveTurn = _ref2.haveTurn,\n          gameState = _ref2.gameState,\n          currentResult = _ref2.currentResult;\n      return React.createElement(SumAction, {\n        currentResult: currentResult,\n        haveTurn: haveTurn,\n        gameState: gameState,\n        isPossible: isPossible,\n        getNextResult: getNextResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    })\n  };\n};\n\nexport default SumActionContainer;","map":{"version":3,"sources":["/app/src/components/Actions/Sum.js"],"names":["React","useState","GameContext","Button","SumAction","haveTurn","gameState","currentResult","isPossible","getNextResult","number","SumActionContainer","props","result","toString","reduce","x","y","parseInt","value","length","hash","possible","button"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,SAASC,MAAT,QAAuB,YAAvB;AAEA,OAAO,kCAAP;AAEA,OAAO,kBAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAOZ;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,aAII,QAJJA,aAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADJC,MACI,QADJA,MACI;AACJ,SACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAE,KADb;AAEE,IAAA,QAAQ,EAAE,CAACF,UAAU,CAACD,aAAD,CAAX,IAA8BD,SAAS,KAAK,OAFxD;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAACI,aAAD,CAAd;AAAA,KAHX;AAIQ,IAAA,KAAK,EAAC,4BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAlBD;;AAmBA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AAElC,MAAMH,aAAa,GAAG,SAAhBA,aAAgB,CAAAI,MAAM;AAAA,WAAI,mBAAIA,MAAM,CAACC,QAAP,EAAJ,EAAuBC,MAAvB,CAA8B,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUC,QAAQ,CAACF,CAAD,CAAR,GAAcE,QAAQ,CAACD,CAAD,CAAhC;AAAA,KAA9B,CAAJ;AAAA,GAA5B;;AAEA,MAAMT,UAAU,GAAG,SAAbA,UAAa,CAACW,KAAD;AAAA,WAAWA,KAAK,CAACL,QAAN,GAAiBM,MAAjB,GAA0B,CAArC;AAAA,GAAnB;;AAEA,SAAO;AACLX,IAAAA,aAAa,EAAEA,aADV;AAELY,IAAAA,IAAI,EAAE,KAFD;AAILC,IAAAA,QAAQ,EAAE,kBAACH,KAAD,EAAW;AACnB,aAAOX,UAAU,CAACW,KAAD,CAAjB;AACD,KANI;AAQLI,IAAAA,MAAM,EACJ,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA,UAAGlB,QAAH,SAAGA,QAAH;AAAA,UAAaC,SAAb,SAAaA,SAAb;AAAA,UAAwBC,aAAxB,SAAwBA,aAAxB;AAAA,aAA4C,oBAAC,SAAD;AAAW,QAAA,aAAa,EAAEA,aAA1B;AAAyC,QAAA,QAAQ,EAAEF,QAAnD;AAA6D,QAAA,SAAS,EAAEC,SAAxE;AAAmF,QAAA,UAAU,EAAEE,UAA/F;AAA2G,QAAA,aAAa,EAAEC,aAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C;AAAA,KADH;AATG,GAAP;AAcD,CApBD;;AAsBA,eAAeE,kBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Button } from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../GameBoard.css\";\n\nconst SumAction = ({\n  haveTurn,\n  gameState,\n  currentResult,\n  isPossible,\n  getNextResult,\n  number\n}) => {\n  return (\n    <Button\n      className={\"sum\"}\n      disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n      onClick={() => haveTurn(getNextResult)}\n            title=\"Sum numbers - 13 = 1+3 = 4\"\n>\n      SUM\n    </Button>\n  );\n};\nconst SumActionContainer = props => {\n  \n  const getNextResult = result => [...result.toString()].reduce((x, y) => parseInt(x) + parseInt(y));\n\n  const isPossible = (value) => value.toString().length > 1 \n\n  return {\n    getNextResult: getNextResult,\n    hash: \"sum\",\n\n    possible: (value) => {\n      return isPossible(value);\n    },\n\n    button: (\n      <GameContext.Consumer>\n        {({ haveTurn, gameState, currentResult }) => <SumAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} isPossible={isPossible} getNextResult={getNextResult} />}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport default SumActionContainer;\n"]},"metadata":{},"sourceType":"module"}