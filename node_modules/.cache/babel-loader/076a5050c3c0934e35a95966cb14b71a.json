{"ast":null,"code":"import _toConsumableArray from \"/app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/app/src/components/Actions/Sum.js\";\nimport React from \"react\";\nimport { GameContext } from \"../../GameContext\";\nimport { Button } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../GameBoard.css\";\n\nvar SumAction = function SumAction(_ref) {\n  var haveTurn = _ref.haveTurn,\n      gameState = _ref.gameState,\n      currentResult = _ref.currentResult,\n      isPossible = _ref.isPossible,\n      getNextResult = _ref.getNextResult;\n  return React.createElement(Button, {\n    className: \"sum\",\n    disabled: !isPossible(currentResult) || gameState !== \"ready\",\n    onClick: function onClick() {\n      return haveTurn(getNextResult);\n    },\n    title: \"Sum numbers - 13 = 1+3 = 4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"SUM\");\n};\n\nvar SumActionContainer = function SumActionContainer() {\n  var _useContext = useContext(GameContext),\n      maxTurns = _useContext.maxTurns;\n\n  console.log(\"MAX TURNS\", maxTurns);\n\n  var getNextResult = function getNextResult(result) {\n    return _toConsumableArray(result.toString()).reduce(function (x, y) {\n      return parseInt(x) + parseInt(y);\n    });\n  };\n\n  var isPossible = function isPossible(value) {\n    var possible = value.toString().length > 1;\n    console.log(\"Sum Is Possible\", value, possible);\n    return possible;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"sum\",\n    possible: function possible(value) {\n      return isPossible(value);\n    },\n    button: React.createElement(GameContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, function (_ref2) {\n      var haveTurn = _ref2.haveTurn,\n          gameState = _ref2.gameState,\n          currentResult = _ref2.currentResult;\n      return React.createElement(SumAction, {\n        currentResult: currentResult,\n        haveTurn: haveTurn,\n        gameState: gameState,\n        isPossible: isPossible,\n        getNextResult: getNextResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    })\n  };\n};\n\nexport default SumActionContainer;","map":{"version":3,"sources":["/app/src/components/Actions/Sum.js"],"names":["React","GameContext","Button","SumAction","haveTurn","gameState","currentResult","isPossible","getNextResult","SumActionContainer","useContext","maxTurns","console","log","result","toString","reduce","x","y","parseInt","value","possible","length","hash","button"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,SAASC,MAAT,QAAuB,YAAvB;AAEA,OAAO,kCAAP;AAEA,OAAO,kBAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAMZ;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,aAGI,QAHJA,aAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADJC,aACI,QADJA,aACI;AACJ,SACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAE,KADb;AAEE,IAAA,QAAQ,EAAE,CAACD,UAAU,CAACD,aAAD,CAAX,IAA8BD,SAAS,KAAK,OAFxD;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAACI,aAAD,CAAd;AAAA,KAHX;AAIQ,IAAA,KAAK,EAAC,4BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAjBD;;AAkBA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA,oBAEVC,UAAU,CAACT,WAAD,CAFA;AAAA,MAEvBU,QAFuB,eAEvBA,QAFuB;;AAI/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,QAAzB;;AAEA,MAAMH,aAAa,GAAG,SAAhBA,aAAgB,CAAAM,MAAM;AAAA,WAAI,mBAAIA,MAAM,CAACC,QAAP,EAAJ,EAAuBC,MAAvB,CAA8B,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUC,QAAQ,CAACF,CAAD,CAAR,GAAcE,QAAQ,CAACD,CAAD,CAAhC;AAAA,KAA9B,CAAJ;AAAA,GAA5B;;AAEA,MAAMX,UAAU,GAAG,SAAbA,UAAa,CAACa,KAAD,EAAW;AAC5B,QAAIC,QAAQ,GAAID,KAAK,CAACL,QAAN,GAAiBO,MAAjB,GAA0B,CAA1C;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BO,KAA9B,EAAqCC,QAArC;AAEA,WAAOA,QAAP;AACD,GALD;;AAOA,SAAO;AACLb,IAAAA,aAAa,EAAEA,aADV;AAELe,IAAAA,IAAI,EAAE,KAFD;AAILF,IAAAA,QAAQ,EAAE,kBAACD,KAAD,EAAW;AACnB,aAAOb,UAAU,CAACa,KAAD,CAAjB;AACD,KANI;AAQLI,IAAAA,MAAM,EACJ,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA,UAAGpB,QAAH,SAAGA,QAAH;AAAA,UAAaC,SAAb,SAAaA,SAAb;AAAA,UAAwBC,aAAxB,SAAwBA,aAAxB;AAAA,aAA4C,oBAAC,SAAD;AAAW,QAAA,aAAa,EAAEA,aAA1B;AAAyC,QAAA,QAAQ,EAAEF,QAAnD;AAA6D,QAAA,SAAS,EAAEC,SAAxE;AAAmF,QAAA,UAAU,EAAEE,UAA/F;AAA2G,QAAA,aAAa,EAAEC,aAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C;AAAA,KADH;AATG,GAAP;AAcD,CA7BD;;AA+BA,eAAeC,kBAAf","sourcesContent":["import React from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Button } from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../GameBoard.css\";\n\nconst SumAction = ({\n  haveTurn,\n  gameState,\n  currentResult,\n  isPossible,\n  getNextResult\n}) => {\n  return (\n    <Button\n      className={\"sum\"}\n      disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n      onClick={() => haveTurn(getNextResult)}\n            title=\"Sum numbers - 13 = 1+3 = 4\"\n>\n      SUM\n    </Button>\n  );\n};\nconst SumActionContainer = () => {\n  \n  const { maxTurns } = useContext(GameContext)\n\n  console.log(\"MAX TURNS\", maxTurns)\n\n  const getNextResult = result => [...result.toString()].reduce((x, y) => parseInt(x) + parseInt(y));\n\n  const isPossible = (value) => {\n    let possible =  value.toString().length > 1;\n    console.log(\"Sum Is Possible\",value, possible)\n    \n    return possible\n  }  \n\n  return {\n    getNextResult: getNextResult,\n    hash: \"sum\",\n\n    possible: (value) => {\n      return isPossible(value);\n    },\n\n    button: (\n      <GameContext.Consumer>\n        {({ haveTurn, gameState, currentResult }) => <SumAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} isPossible={isPossible} getNextResult={getNextResult} />}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport default SumActionContainer;\n"]},"metadata":{},"sourceType":"module"}