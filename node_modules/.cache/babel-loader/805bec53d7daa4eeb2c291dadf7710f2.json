{"ast":null,"code":"import _toConsumableArray from \"/app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/app/src/components/Actions/Reverse.js\";\nimport React from \"react\";\nimport { GameContext } from \"../../GameContext\";\nimport { Button } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../GameBoard.css\";\n\nvar ReverseAction = function ReverseAction(_ref) {\n  var haveTurn = _ref.haveTurn,\n      gameState = _ref.gameState,\n      currentResult = _ref.currentResult,\n      isPossible = _ref.isPossible,\n      getNextResult = _ref.getNextResult;\n  return React.createElement(Button, {\n    className: \"reverse\",\n    disabled: !isPossible(currentResult) || gameState !== \"ready\",\n    onClick: function onClick() {\n      return haveTurn(getNextResult);\n    },\n    title: \"Reverse numbers 123 = 321\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"<->\");\n};\n\nvar ReverseActionContainer = function ReverseActionContainer() {\n  var getNextResult = function getNextResult(result) {\n    return parseInt((result < 0 ? \"-\" : \"\") + _toConsumableArray(result.toString()).filter(function (x) {\n      return x.toString() !== \"-\";\n    }).reverse().join(\"\"));\n  };\n\n  var isPossible = function isPossible(value) {\n    var possible = value.toString().length > 1;\n    console.log(\"Reverse Is Possible\", value, possible);\n    return possible;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"reverse\",\n    possible: function possible(valu) {\n      return isPossible(value);\n    },\n    button: React.createElement(GameContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, function (_ref2) {\n      var haveTurn = _ref2.haveTurn,\n          gameState = _ref2.gameState,\n          currentResult = _ref2.currentResult;\n      return React.createElement(ReverseAction, {\n        currentResult: currentResult,\n        haveTurn: haveTurn,\n        gameState: gameState,\n        isPossible: isPossible,\n        getNextResult: getNextResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    })\n  };\n};\n\nexport default ReverseActionContainer;","map":{"version":3,"sources":["/app/src/components/Actions/Reverse.js"],"names":["React","GameContext","Button","ReverseAction","haveTurn","gameState","currentResult","isPossible","getNextResult","ReverseActionContainer","result","parseInt","toString","filter","x","reverse","join","value","possible","length","console","log","hash","valu","button"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,SAASC,MAAT,QAAuB,YAAvB;AAEA,OAAO,kCAAP;AAEA,OAAO,kBAAP;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAOhB;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,aAII,QAJJA,aAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAEJ,SACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAE,SADb;AAEE,IAAA,QAAQ,EAAE,CAACD,UAAU,CAACD,aAAD,CAAX,IAA8BD,SAAS,KAAK,OAFxD;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAACI,aAAD,CAAd;AAAA,KAHX;AAIE,IAAA,KAAK,EAAC,2BAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAnBD;;AAsBA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC,MAAMD,aAAa,GAAG,SAAhBA,aAAgB,CAAAE,MAAM;AAAA,WAC1BC,QAAQ,CACN,CAACD,MAAM,GAAG,CAAT,GAAa,GAAb,GAAmB,EAApB,IACE,mBAAIA,MAAM,CAACE,QAAP,EAAJ,EACGC,MADH,CACU,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACF,QAAF,OAAiB,GAArB;AAAA,KADX,EAEGG,OAFH,GAGGC,IAHH,CAGQ,EAHR,CAFI,CADkB;AAAA,GAA5B;;AASA,MAAMT,UAAU,GAAG,SAAbA,UAAa,CAACU,KAAD,EAAW;AAC5B,QAAIC,QAAQ,GAAGD,KAAK,CAACL,QAAN,GAAiBO,MAAjB,GAA0B,CAAzC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCJ,KAAlC,EAAyCC,QAAzC;AAEA,WAAOA,QAAP;AACD,GALD;;AAQA,SAAO;AACLV,IAAAA,aAAa,EAAEA,aADV;AAELc,IAAAA,IAAI,EAAE,SAFD;AAILJ,IAAAA,QAAQ,EAAE,kBAACK,IAAD,EAAU;AAClB,aAAOhB,UAAU,CAACU,KAAD,CAAjB;AACD,KANI;AAQLO,IAAAA,MAAM,EACJ,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA,UAAGpB,QAAH,SAAGA,QAAH;AAAA,UAAaC,SAAb,SAAaA,SAAb;AAAA,UAAwBC,aAAxB,SAAwBA,aAAxB;AAAA,aACC,oBAAC,aAAD;AACE,QAAA,aAAa,EAAEA,aADjB;AAEE,QAAA,QAAQ,EAAEF,QAFZ;AAGE,QAAA,SAAS,EAAEC,SAHb;AAIE,QAAA,UAAU,EAAEE,UAJd;AAKE,QAAA,aAAa,EAAEC,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAAA,KADH;AATG,GAAP;AAsBD,CAxCD;;AA0CA,eAAeC,sBAAf","sourcesContent":["import React from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Button } from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../GameBoard.css\";\n\nconst ReverseAction = ({\n  haveTurn,\n  gameState,\n  currentResult,\n  isPossible,\n  getNextResult,\n\n}) => {\n\n  return (\n    <Button\n      className={\"reverse\"}\n      disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n      onClick={() => haveTurn(getNextResult)}\n      title=\"Reverse numbers 123 = 321\"\n    >\n      &lt;-&gt;\n    </Button>\n  );\n};\n\n\nconst ReverseActionContainer = () => {\n  const getNextResult = result =>\n    parseInt(\n      (result < 0 ? \"-\" : \"\") +\n        [...result.toString()]\n          .filter(x => x.toString() !== \"-\")\n          .reverse()\n          .join(\"\")\n    );\n\n  const isPossible = (value) => {\n    let possible = value.toString().length > 1;\n    console.log(\"Reverse Is Possible\",value, possible)\n    \n    return possible\n  }  \n\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"reverse\",\n\n    possible: (valu) => {\n      return isPossible(value);\n    },\n\n    button: (\n      <GameContext.Consumer>\n        {({ haveTurn, gameState, currentResult }) => (\n          <ReverseAction\n            currentResult={currentResult}\n            haveTurn={haveTurn}\n            gameState={gameState}\n            isPossible={isPossible}\n            getNextResult={getNextResult}\n          />\n        )}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport default ReverseActionContainer;\n"]},"metadata":{},"sourceType":"module"}