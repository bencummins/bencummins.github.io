{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Actions/Append.js\";\nimport React, { useContext } from 'react';\nimport GameContext from '../GameContext';\nimport { Button } from 'reactstrap';\n\nvar AppendAction = function AppendAction(_ref) {\n  var haveTurn = _ref.haveTurn,\n      gameState = _ref.gameState,\n      currentResult = _ref.currentResult;\n  var number = Math.floor(Math.random() * 9) + 1;\n\n  var getNextResult = function getNextResult(result) {\n    return parseInt(result.toString() + number.toString());\n  };\n\n  var isPossible = function isPossible(currentValue) {\n    return true;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"append-\" + number,\n    possible: function possible() {\n      var _useContext = useContext(GameContext),\n          targetResult = _useContext.targetResult;\n\n      return isPossible(targetResult);\n    },\n    button: React.createElement(Button, {\n      className: \"append\",\n      disabled: !isPossible(currentResult) || gameState !== \"ready\",\n      onClick: function onClick() {\n        return haveTurn(getNextResult);\n      },\n      title: \"Append digit to end - Apending 2 to 21 = 212\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, number)\n  };\n};\n\nvar AppendActionContainer = function AppendActionContainer(props) {\n  return React.createElement(GameContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, function (_ref2) {\n    var haveTurn = _ref2.haveTurn,\n        gameState = _ref2.gameState,\n        currentResult = _ref2.currentResult;\n    return React.createElement(AppendAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  });\n};\n\nexport default AppendActionContainer;","map":{"version":3,"sources":["/app/src/components/Actions/Append.js"],"names":["React","useContext","GameContext","Button","AppendAction","haveTurn","gameState","currentResult","number","Math","floor","random","getNextResult","result","parseInt","toString","isPossible","currentValue","hash","possible","targetResult","button","AppendActionContainer","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,SAASC,MAAT,QAAuB,YAAvB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA0C;AAAA,MAAxCC,QAAwC,QAAxCA,QAAwC;AAAA,MAA9BC,SAA8B,QAA9BA,SAA8B;AAAA,MAAnBC,aAAmB,QAAnBA,aAAmB;AAE3D,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAA7C;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM;AAAA,WAC1BC,QAAQ,CAACD,MAAM,CAACE,QAAP,KAAoBP,MAAM,CAACO,QAAP,EAArB,CADkB;AAAA,GAA5B;;AAGE,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,YAAY;AAAA,WAAI,IAAJ;AAAA,GAA/B;;AAEF,SAAO;AACLL,IAAAA,aAAa,EAAEA,aADV;AAELM,IAAAA,IAAI,EAAE,YAAYV,MAFb;AAGLW,IAAAA,QAAQ,EAAE,oBAAM;AAAA,wBACSlB,UAAU,CAACC,WAAD,CADnB;AAAA,UACRkB,YADQ,eACRA,YADQ;;AAEd,aAAOJ,UAAU,CAACI,YAAD,CAAjB;AACD,KANI;AAQLC,IAAAA,MAAM,EACA,oBAAC,MAAD;AACE,MAAA,SAAS,EAAE,QADb;AAEE,MAAA,QAAQ,EAAE,CAACL,UAAU,CAACT,aAAD,CAAX,IAA8BD,SAAS,KAAK,OAFxD;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMD,QAAQ,CAACO,aAAD,CAAd;AAAA,OAHX;AAIE,MAAA,KAAK,EAAC,8CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGJ,MANH;AATD,GAAP;AAmBC,CA5BL;;AA8BA,IAAMc,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,KAAK,EAAI;AACrC,SACE,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA,QAAGlB,QAAH,SAAGA,QAAH;AAAA,QAAaC,SAAb,SAAaA,SAAb;AAAA,QAAwBC,aAAxB,SAAwBA,aAAxB;AAAA,WACD,oBAAE,YAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC;AAAA,GADD,CADF;AAOD,CARD;;AAUA,eAAee,qBAAf","sourcesContent":["import React, { useContext } from 'react'\nimport GameContext from '../GameContext'\n\nimport { Button } from 'reactstrap'\n\nconst AppendAction = ({haveTurn, gameState, currentResult}) => {\n\n    let number = Math.floor(Math.random() * 9) + 1\n  \n    const getNextResult = result =>\n      parseInt(result.toString() + number.toString());\n    \n      const isPossible = currentValue => true;\n  \n    return {\n      getNextResult: getNextResult,\n      hash: \"append-\" + number,\n      possible: () => {\n        let { targetResult } = useContext(GameContext)\n        return isPossible(targetResult)\n      },\n  \n      button: (\n            <Button\n              className={\"append\"}\n              disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n              onClick={() => haveTurn(getNextResult)}\n              title=\"Append digit to end - Apending 2 to 21 = 212\"\n            >\n              {number}\n            </Button>\n          )\n        }\n    };\n\nconst AppendActionContainer = props => {\n  return (\n    <GameContext.Consumer>\n    {({ haveTurn, gameState, currentResult }) => (\n    < AppendAction />\n    )}\n    </GameContext.Consumer>\n  )\n}\n\nexport default AppendActionContainer"]},"metadata":{},"sourceType":"module"}