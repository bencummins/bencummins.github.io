{"ast":null,"code":"import _toConsumableArray from \"/app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/app/src/components/Actions/Reverse.js\";\nimport React, { useState } from \"react\";\nimport { GameContext } from \"../../GameContext\";\nimport { Button } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../GameBoard.css\";\n\nvar ReverseAction = function ReverseAction(_ref) {\n  var haveTurn = _ref.haveTurn,\n      gameState = _ref.gameState,\n      currentResult = _ref.currentResult,\n      isPossible = _ref.isPossible,\n      getNextResult = _ref.getNextResult;\n  return React.createElement(Button, {\n    className: \"reverse\",\n    disabled: !isPossible(currentResult) || gameState !== \"ready\",\n    onClick: function onClick() {\n      return haveTurn(getNextResult);\n    },\n    title: \"Reverse numbers 123 = 321\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"<->\");\n};\n\nvar ReverseActionContainer = function ReverseActionContainer(props) {\n  var getNextResult = function getNextResult(result) {\n    return parseInt((result < 0 ? \"-\" : \"\") + _toConsumableArray(result.toString()).filter(function (x) {\n      return x.toString() !== \"-\";\n    }).reverse().join(\"\"));\n  };\n\n  var isPossible = function isPossible(value) {\n    return value.toString().length > 1;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"reverse\",\n    possible: function possible(value) {\n      return isPossible(value);\n    },\n    button: React.createElement(GameContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, function (_ref2) {\n      var haveTurn = _ref2.haveTurn,\n          gameState = _ref2.gameState,\n          currentResult = _ref2.currentResult;\n      return React.createElement(ReverseAction, {\n        currentResult: currentResult,\n        haveTurn: haveTurn,\n        gameState: gameState,\n        isPossible: isPossible,\n        getNextResult: getNextResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    })\n  };\n};\n\nexport default ReverseActionContainer;","map":{"version":3,"sources":["/app/src/components/Actions/Reverse.js"],"names":["React","useState","GameContext","Button","ReverseAction","haveTurn","gameState","currentResult","isPossible","getNextResult","ReverseActionContainer","props","result","parseInt","toString","filter","x","reverse","join","value","length","hash","possible","button"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,SAASC,MAAT,QAAuB,YAAvB;AAEA,OAAO,kCAAP;AAEA,OAAO,kBAAP;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAMhB;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,aAGI,QAHJA,aAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADJC,aACI,QADJA,aACI;AACJ,SACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAE,SADb;AAEE,IAAA,QAAQ,EAAE,CAACD,UAAU,CAACD,aAAD,CAAX,IAA8BD,SAAS,KAAK,OAFxD;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAACI,aAAD,CAAd;AAAA,KAHX;AAII,IAAA,KAAK,EAAC,2BAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAjBD;;AAkBA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,KAAK,EAAI;AAEtC,MAAMF,aAAa,GAAG,SAAhBA,aAAgB,CAACG,MAAD;AAAA,WAAYC,QAAQ,CAClC,CAACD,MAAM,GAAG,CAAT,GAAa,GAAb,GAAmB,EAApB,IACE,mBAAIA,MAAM,CAACE,QAAP,EAAJ,EACGC,MADH,CACU,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACF,QAAF,OAAiB,GAArB;AAAA,KADX,EAEGG,OAFH,GAGGC,IAHH,CAGQ,EAHR,CAFgC,CAApB;AAAA,GAAtB;;AAQY,MAAMV,UAAU,GAAG,SAAbA,UAAa,CAAAW,KAAK;AAAA,WAAIA,KAAK,CAACL,QAAN,GAAiBM,MAAjB,GAA0B,CAA9B;AAAA,GAAxB;;AAGZ,SAAO;AACLX,IAAAA,aAAa,EAAEA,aADV;AAELY,IAAAA,IAAI,EAAE,SAFD;AAILC,IAAAA,QAAQ,EAAE,kBAACH,KAAD,EAAW;AACnB,aAAOX,UAAU,CAACW,KAAD,CAAjB;AACD,KANI;AAQLI,IAAAA,MAAM,EACJ,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA,UAAGlB,QAAH,SAAGA,QAAH;AAAA,UAAaC,SAAb,SAAaA,SAAb;AAAA,UAAwBC,aAAxB,SAAwBA,aAAxB;AAAA,aAA4C,oBAAC,aAAD;AAAe,QAAA,aAAa,EAAEA,aAA9B;AAA6C,QAAA,QAAQ,EAAEF,QAAvD;AAAiE,QAAA,SAAS,EAAEC,SAA5E;AAAwF,QAAA,UAAU,EAAEE,UAApG;AAAgH,QAAA,aAAa,EAAEC,aAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C;AAAA,KADH;AATG,GAAP;AAcD,CA3BD;;AA6BA,eAAeC,sBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Button } from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../GameBoard.css\";\n\nconst ReverseAction = ({\n  haveTurn,\n  gameState,\n  currentResult,\n  isPossible,\n  getNextResult\n}) => {\n  return (\n    <Button\n      className={\"reverse\"}\n      disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n      onClick={() => haveTurn(getNextResult)}\n        title=\"Reverse numbers 123 = 321\"\n>\n      &lt;-&gt;\n    </Button>\n  );\n};\nconst ReverseActionContainer = props => {\n\n  const getNextResult = (result) => parseInt(\n          (result < 0 ? \"-\" : \"\") +\n            [...result.toString()]\n              .filter(x => x.toString() !== \"-\")\n              .reverse()\n              .join(\"\"))\n\n\n              const isPossible = value => value.toString().length > 1\n\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"reverse\",\n\n    possible: (value) => {\n      return isPossible(value);\n    },\n\n    button: (\n      <GameContext.Consumer>\n        {({ haveTurn, gameState, currentResult }) => <ReverseAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState}  isPossible={isPossible} getNextResult={getNextResult} />}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport default ReverseActionContainer;\n"]},"metadata":{},"sourceType":"module"}