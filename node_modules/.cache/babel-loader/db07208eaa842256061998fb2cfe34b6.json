{"ast":null,"code":"import _toConsumableArray from \"/app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/app/src/components/GameBoard/Buttons.js\";\nimport React, { useState } from \"react\";\nimport { GameContext } from \"../../GameContext\";\nimport { Row, Col, Button } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../GameBoard.css\";\nimport { targetPropType } from \"reactstrap/lib/utils\";\n\nfunction Buttons() {\n  return React.createElement(GameContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, function (_ref) {\n    var buttons = _ref.buttons,\n        gameState = _ref.gameState,\n        resetGame = _ref.resetGame;\n    return React.createElement(Row, {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"game-button\",\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(Col, {\n      className: \"game-button\",\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, buttons[0] && buttons[0].button), React.createElement(Col, {\n      className: \"game-button\",\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: resetGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"CLR\")), React.createElement(Col, {\n      className: \"game-button\",\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(Col, {\n      className: \"game-button\",\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, buttons[1] && buttons[1].button), React.createElement(Col, {\n      className: \"game-button\",\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, buttons[2] && buttons[2].button), React.createElement(Col, {\n      className: \"game-button\",\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Col, {\n      className: \"game-button\",\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, buttons[3] && buttons[3].button), React.createElement(Col, {\n      className: \"game-button\",\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, buttons[4] && buttons[4].button));\n  });\n}\n\nexport var SumAction = function SumAction() {\n  //   const  { currentResult }  = useContext(GameContext)\n  var getNextResult = function getNextResult(result) {\n    return _toConsumableArray(result.toString()).reduce(function (x, y) {\n      return parseInt(x) + parseInt(y);\n    });\n  };\n\n  var isPossible = function isPossible(currentResult) {\n    var result = currentResult.toString().length > 1;\n    return result;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"sum\",\n    possible: isPossible,\n    button: React.createElement(GameContext.Consumer, {\n      key: \"sum\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, function (_ref2) {\n      var haveTurn = _ref2.haveTurn,\n          gameState = _ref2.gameState,\n          currentResult = _ref2.currentResult;\n      return React.createElement(Button, {\n        className: \"sum\",\n        disabled: !isPossible(currentResult) || gameState !== \"ready\",\n        onClick: function onClick() {\n          return haveTurn(getNextResult);\n        },\n        title: \"Sum numbers - 13 = 1+3 = 4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"SUM\");\n    })\n  };\n};\nexport var ReverseAction = function ReverseAction() {\n  var getNextResult = function getNextResult(result) {\n    return parseInt((result < 0 ? \"-\" : \"\") + _toConsumableArray(result.toString()).filter(function (x) {\n      return x.toString() !== \"-\";\n    }).reverse().join(\"\"));\n  };\n\n  var isPossible = function isPossible(currentValue) {\n    return currentValue.toString().length > 1;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"reverse\",\n    possible: isPossible,\n    button: React.createElement(GameContext.Consumer, {\n      key: \"reverse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, function (_ref3) {\n      var haveTurn = _ref3.haveTurn,\n          gameState = _ref3.gameState,\n          currentResult = _ref3.currentResult;\n      return React.createElement(Button, {\n        className: \"reverse\",\n        disabled: !isPossible(currentResult) || gameState !== \"ready\",\n        onClick: function onClick() {\n          return haveTurn(getNextResult);\n        },\n        title: \"Reverse numbers 1,2,3 = 3,2,1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"<->\");\n    })\n  };\n};\nexport var AppendAction = function AppendAction() {\n  var number = Math.floor(Math.random() * 9) + 1;\n\n  var getNextResult = function getNextResult(result) {\n    return parseInt(result.toString() + number.toString());\n  };\n\n  var isPossible = function isPossible(currentValue) {\n    return true;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"append-\" + number,\n    possible: isPossible,\n    button: React.createElement(GameContext.Consumer, {\n      key: \"append-\" + number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, function (_ref4) {\n      var haveTurn = _ref4.haveTurn,\n          gameState = _ref4.gameState,\n          currentResult = _ref4.currentResult;\n      return React.createElement(Button, {\n        className: \"append\",\n        disabled: !isPossible(currentResult) || gameState !== \"ready\",\n        onClick: function onClick() {\n          return haveTurn(getNextResult);\n        },\n        title: \"Append digit to end - Apending 2 to 21 = 212\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, number);\n    })\n  };\n};\nexport var SubtractAction = function SubtractAction() {\n  var number = Math.floor(Math.random() * 9) + 1;\n\n  var getNextResult = function getNextResult(result) {\n    return result - number;\n  };\n\n  var isPossible = function isPossible(currentValue) {\n    return true;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"subtract-\" + number,\n    possible: isPossible,\n    button: React.createElement(GameContext.Consumer, {\n      key: \"subtract-\" + number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, function (_ref5) {\n      var haveTurn = _ref5.haveTurn,\n          gameState = _ref5.gameState,\n          currentResult = _ref5.currentResult;\n      return React.createElement(Button, {\n        className: \"subtract\",\n        title: \"Subtract \" + number,\n        disabled: !isPossible(currentResult) || gameState !== \"ready\",\n        onClick: function onClick() {\n          return haveTurn(getNextResult);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"- \", number);\n    })\n  };\n};\nexport var AddAction = function AddAction() {\n  var number = Math.floor(Math.random() * 9) + 1;\n\n  var getNextResult = function getNextResult(result) {\n    return result + number;\n  };\n\n  var isPossible = function isPossible(currentValue) {\n    return true;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"add-\" + number,\n    possible: isPossible,\n    button: React.createElement(GameContext.Consumer, {\n      key: \"add-\" + number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, function (_ref6) {\n      var haveTurn = _ref6.haveTurn,\n          gameState = _ref6.gameState,\n          currentResult = _ref6.currentResult;\n      return React.createElement(Button, {\n        className: \"add\",\n        title: \"Add \" + number,\n        disabled: !isPossible(currentResult) || gameState !== \"ready\",\n        onClick: function onClick() {\n          return haveTurn(getNextResult);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"+ \", number);\n    })\n  };\n};\nexport var MultiplyAction = function MultiplyAction() {\n  var number = Math.floor(Math.random() * 3) + 1;\n\n  var getNextResult = function getNextResult(result) {\n    return result * number;\n  };\n\n  var isPossible = function isPossible(currentValue) {\n    return true;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"multiply-\" + number,\n    possible: isPossible,\n    button: React.createElement(GameContext.Consumer, {\n      key: \"multiply-\" + number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, function (_ref7) {\n      var haveTurn = _ref7.haveTurn,\n          gameState = _ref7.gameState,\n          currentResult = _ref7.currentResult;\n      return React.createElement(Button, {\n        className: \"multiply\",\n        title: \"Multiply \" + number,\n        disabled: !isPossible(currentResult) || gameState !== \"ready\",\n        onClick: function onClick() {\n          return haveTurn(getNextResult);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"X \", number);\n    })\n  };\n};\nexport var DivideAction = function DivideAction() {\n  var number = Math.floor(Math.random() * 3) + 1;\n\n  var _useContext = useContext(GameContext),\n      targetResult = _useContext.targetResult;\n\n  var getNextResult = function getNextResult(result) {\n    return result / number;\n  };\n\n  var isPossible = function isPossible(currentValue) {\n    return currentValue > 1 && currentValue % number == 0;\n  };\n\n  var isPossibleForTarget = function isPossibleForTarget() {\n    return targetResult > 1 && currentValue % number == 0;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"divide-\" + number,\n    possible: isPossibleForTarget,\n    button: React.createElement(GameContext.Consumer, {\n      key: \"divide-\" + number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, function (_ref8) {\n      var haveTurn = _ref8.haveTurn,\n          gameState = _ref8.gameState,\n          currentResult = _ref8.currentResult;\n      return React.createElement(Button, {\n        className: \"divide\",\n        title: \"Divide \" + number,\n        disabled: !isPossible(currentResult) || gameState !== \"ready\",\n        onClick: function onClick() {\n          return haveTurn(getNextResult);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"/ \", number);\n    })\n  };\n};\nexport default Buttons;","map":{"version":3,"sources":["/app/src/components/GameBoard/Buttons.js"],"names":["React","useState","GameContext","Row","Col","Button","targetPropType","Buttons","buttons","gameState","resetGame","button","SumAction","getNextResult","result","toString","reduce","x","y","parseInt","isPossible","currentResult","length","hash","possible","haveTurn","ReverseAction","filter","reverse","join","currentValue","AppendAction","number","Math","floor","random","SubtractAction","AddAction","MultiplyAction","DivideAction","useContext","targetResult","isPossibleForTarget"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Row, Col, Button } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../GameBoard.css\";\nimport { targetPropType } from \"reactstrap/lib/utils\";\n\nfunction Buttons() {\n  return (\n    <GameContext.Consumer>\n      {({ buttons, gameState, resetGame }) => (\n        <Row className={\"buttons\"}>\n          <Col className={\"game-button\"} xs={4} />\n          <Col className={\"game-button\"} xs={4}>\n            {buttons[0] && buttons[0].button}\n          </Col>\n          <Col className={\"game-button\"} xs={4}>\n            <Button onClick={resetGame}>CLR</Button>\n          </Col>\n\n          <Col className={\"game-button\"} xs={4} />\n          <Col className={\"game-button\"} xs={4}>\n            {buttons[1] && buttons[1].button}\n          </Col>\n          <Col className={\"game-button\"} xs={4}>\n            {buttons[2] && buttons[2].button}\n          </Col>\n\n          <Col className={\"game-button\"} xs={4} />\n          <Col className={\"game-button\"} xs={4}>\n            {buttons[3] && buttons[3].button}\n          </Col>\n          <Col className={\"game-button\"} xs={4}>\n            {buttons[4] && buttons[4].button}\n          </Col>\n        </Row>\n      )}\n    </GameContext.Consumer>\n  );\n}\n\nexport const SumAction = () => {\n  //   const  { currentResult }  = useContext(GameContext)\n\n  const getNextResult = result =>\n    [...result.toString()].reduce((x, y) => parseInt(x) + parseInt(y));\n  const isPossible = currentResult => {\n    let result = currentResult.toString().length > 1;\n\n    return result;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"sum\",\n    possible: isPossible,   \n\n    button: (\n      <GameContext.Consumer key={\"sum\"}>\n        {({ haveTurn, gameState, currentResult }) => (\n          <Button\n            className={\"sum\"}\n            disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n            onClick={() => haveTurn(getNextResult)}\n            title=\"Sum numbers - 13 = 1+3 = 4\"\n          >\n            SUM\n          </Button>\n        )}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport const ReverseAction = () => {\n  const getNextResult = result => {\n    return parseInt(\n      (result < 0 ? \"-\" : \"\") +\n        [...result.toString()]\n          .filter(x => x.toString() !== \"-\")\n          .reverse()\n          .join(\"\")\n    );\n  };\n  const isPossible = currentValue => currentValue.toString().length > 1;\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"reverse\",\n    possible: isPossible,\n\n    button: (\n      <GameContext.Consumer key={\"reverse\"}>\n        {({ haveTurn, gameState, currentResult }) => (\n          <Button\n            className={\"reverse\"}\n            disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n            onClick={() => haveTurn(getNextResult)}\n            title=\"Reverse numbers 1,2,3 = 3,2,1\"\n          >\n            &lt;-&gt;\n          </Button>\n        )}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport const AppendAction = () => {\n  \n  let number = Math.floor(Math.random() * 9) + 1\n\n  const getNextResult = result =>\n    parseInt(result.toString() + number.toString());\n  const isPossible = currentValue => true;\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"append-\" + number,\n    possible: isPossible,\n\n    button: (\n      <GameContext.Consumer key={\"append-\" + number}>\n        {({ haveTurn, gameState, currentResult }) => (\n          <Button\n            className={\"append\"}\n            disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n            onClick={() => haveTurn(getNextResult)}\n            title=\"Append digit to end - Apending 2 to 21 = 212\"\n          >\n            {number}\n          </Button>\n        )}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport const SubtractAction = () => {\n  let number = Math.floor(Math.random() * 9) + 1;\n\n  const getNextResult = result => result - number;\n  const isPossible = currentValue => true;\n  return {\n    getNextResult: getNextResult,\n    hash: \"subtract-\" + number,\n    possible: isPossible,\n\n    button: (\n      <GameContext.Consumer key={\"subtract-\" + number}>\n        {({ haveTurn, gameState, currentResult }) => (\n          <Button\n            className={\"subtract\"}\n            title={\"Subtract \" + number}\n            disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n            onClick={() => haveTurn(getNextResult)}\n          >\n            - {number}\n          </Button>\n        )}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport const AddAction = () => {\n  let number = Math.floor(Math.random() * 9) + 1;\n\n  const getNextResult = result => result + number;\n  const isPossible = currentValue => true;\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"add-\" + number,\n    possible: isPossible,\n\n    button: (\n      <GameContext.Consumer key={\"add-\" + number}>\n        {({ haveTurn, gameState, currentResult }) => (\n          <Button\n            className={\"add\"}\n            title={\"Add \" + number}\n            disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n            onClick={() => haveTurn(getNextResult)}\n          >\n            + {number}\n          </Button>\n        )}\n      </GameContext.Consumer>\n    )\n  };\n};\nexport const MultiplyAction = () => {\n  let number = Math.floor(Math.random() * 3) + 1;\n\n  const getNextResult = result => result * number;\n  const isPossible = currentValue => true;\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"multiply-\" + number,\n    possible: isPossible,\n\n    button: (\n      <GameContext.Consumer key={\"multiply-\" + number}>\n        {({ haveTurn, gameState, currentResult }) => (\n          <Button\n            className={\"multiply\"}\n            title={\"Multiply \" + number}\n            disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n            onClick={() => haveTurn(getNextResult)}\n          >\n            X {number}\n          </Button>\n        )}\n      </GameContext.Consumer>\n    )\n  };\n};\nexport const DivideAction = () => {\n  let number = Math.floor(Math.random() * 3) + 1;\n\n  const { targetResult } = useContext(GameContext)\n\n  const getNextResult = result => result / number;\n  const isPossible = currentValue => currentValue > 1 && (currentValue % number == 0)   ;\n  const isPossibleForTarget = () => targetResult > 1 && (currentValue % number == 0)   ;\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"divide-\" + number,\n    possible: isPossibleForTarget,\n\n    button: (\n      <GameContext.Consumer key={\"divide-\" + number}>\n        {({ haveTurn, gameState, currentResult }) => (\n          <Button\n            className={\"divide\"}\n            title={\"Divide \" + number}\n            disabled={!isPossible(currentResult) || gameState !== \"ready\"}\n            onClick={() => haveTurn(getNextResult)}\n          >\n            / {number}\n          </Button>\n        )}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport default Buttons;\n"]},"metadata":{},"sourceType":"module"}