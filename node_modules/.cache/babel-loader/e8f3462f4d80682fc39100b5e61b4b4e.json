{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Actions/Append.js\";\nimport React, { useContext } from \"react\";\nimport { GameContext } from \"../../GameContext\";\nimport { Button } from \"reactstrap\";\n\nvar AppendAction = function AppendAction(_ref) {\n  var haveTurn = _ref.haveTurn,\n      gameState = _ref.gameState,\n      currentResult = _ref.currentResult,\n      isPossible = _ref.isPossible,\n      getNextResult = _ref.getNextResult,\n      number = _ref.number;\n  return React.createElement(Button, {\n    className: \"append\",\n    disabled: !isPossible(4) || gameState !== \"ready\",\n    onClick: function onClick() {\n      return haveTurn(getNextResult);\n    },\n    title: \"Append digit to end - Apending 2 to 21 = 212\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, number);\n};\n\nvar AppendActionContainer = function AppendActionContainer(props) {\n  var number = Math.floor(Math.random() * 9) + 1;\n\n  var getNextResult = function getNextResult(result) {\n    return parseInt(result.toString() + number.toString());\n  };\n\n  var isPossible = function isPossible() {\n    return true;\n  };\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"append-\" + number,\n    possible: function possible() {\n      var _useContext = useContext(GameContext),\n          targetResult = _useContext.targetResult;\n\n      return isPossible(targetResult);\n    },\n    button: React.createElement(GameContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, function (_ref2) {\n      var haveTurn = _ref2.haveTurn,\n          gameState = _ref2.gameState,\n          currentResult = _ref2.currentResult;\n      return React.createElement(AppendAction, {\n        number: number,\n        isPossible: isPossible,\n        getNextResult: getNextResult,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    })\n  };\n};\n\nexport default AppendActionContainer;","map":{"version":3,"sources":["/app/src/components/Actions/Append.js"],"names":["React","useContext","GameContext","Button","AppendAction","haveTurn","gameState","currentResult","isPossible","getNextResult","number","AppendActionContainer","props","Math","floor","random","result","parseInt","toString","hash","possible","targetResult","button"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,SAASC,MAAT,QAAuB,YAAvB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAOf;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,aAII,QAJJA,aAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADJC,MACI,QADJA,MACI;AACJ,SACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAE,QADb;AAEE,IAAA,QAAQ,EAAE,CAACF,UAAU,CAAC,CAAD,CAAX,IAAkBF,SAAS,KAAK,OAF5C;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAACI,aAAD,CAAd;AAAA,KAHX;AAIE,IAAA,KAAK,EAAC,8CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGC,MANH,CADF;AAUD,CAlBD;;AAmBA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,KAAK,EAAI;AACrC,MAAMF,MAAM,GAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAA/C;;AAEA,MAAMN,aAAa,GAAG,SAAhBA,aAAgB,CAAAO,MAAM;AAAA,WAC1BC,QAAQ,CAACD,MAAM,CAACE,QAAP,KAAoBR,MAAM,CAACQ,QAAP,EAArB,CADkB;AAAA,GAA5B;;AAGA,MAAMV,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAM,IAAN;AAAA,GAAnB;;AAEA,SAAO;AACLC,IAAAA,aAAa,EAAEA,aADV;AAELU,IAAAA,IAAI,EAAE,YAAYT,MAFb;AAILU,IAAAA,QAAQ,EAAE,oBAAM;AAAA,wBACSnB,UAAU,CAACC,WAAD,CADnB;AAAA,UACRmB,YADQ,eACRA,YADQ;;AAEd,aAAOb,UAAU,CAACa,YAAD,CAAjB;AACD,KAPI;AASLC,IAAAA,MAAM,EACJ,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA,UAAGjB,QAAH,SAAGA,QAAH;AAAA,UAAaC,SAAb,SAAaA,SAAb;AAAA,UAAwBC,aAAxB,SAAwBA,aAAxB;AAAA,aAA4C,oBAAC,YAAD;AAAc,QAAA,MAAM,EAAEG,MAAtB;AAA8B,QAAA,UAAU,EAAEF,UAA1C;AAAsD,QAAA,aAAa,EAAEC,aAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C;AAAA,KADH;AAVG,GAAP;AAeD,CAvBD;;AAyBA,eAAeE,qBAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { GameContext } from \"../../GameContext\";\n\nimport { Button } from \"reactstrap\";\n\nconst AppendAction = ({\n  haveTurn,\n  gameState,\n  currentResult,\n  isPossible,\n  getNextResult,\n  number\n}) => {\n  return (\n    <Button\n      className={\"append\"}\n      disabled={!isPossible(4) || gameState !== \"ready\"}\n      onClick={() => haveTurn(getNextResult)}\n      title=\"Append digit to end - Apending 2 to 21 = 212\"\n    >\n      {number}\n    </Button>\n  );\n};\nconst AppendActionContainer = props => {\n  const number = Math.floor(Math.random() * 9) + 1;\n\n  const getNextResult = result =>\n    parseInt(result.toString() + number.toString());\n\n  const isPossible = () => true;\n\n  return {\n    getNextResult: getNextResult,\n    hash: \"append-\" + number,\n\n    possible: () => {\n      let { targetResult } = useContext(GameContext);\n      return isPossible(targetResult);\n    },\n\n    button: (\n      <GameContext.Consumer>\n        {({ haveTurn, gameState, currentResult }) => <AppendAction number={number} isPossible={isPossible} getNextResult={getNextResult} />}\n      </GameContext.Consumer>\n    )\n  };\n};\n\nexport default AppendActionContainer;\n"]},"metadata":{},"sourceType":"module"}