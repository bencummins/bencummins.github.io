{"map":"{\"version\":3,\"sources\":[\"/app/src/GameContext.js\",\"/app/src/components/GameBoard/Display.js\",\"/app/src/components/GameBoard/Target.js\",\"/app/src/components/GameBoard/Turns.js\",\"/app/src/components/GameBoard/GameStatus.js\",\"/app/src/components/GameBoard/Cheat.js\",\"/app/src/components/GameBoard/Buttons.js\",\"/app/src/components/Actions/Append.js\",\"/app/src/components/Actions/Add.js\",\"/app/src/components/Actions/Subtract.js\",\"/app/src/components/Actions/Divide.js\",\"/app/src/components/Actions/Multiply.js\",\"/app/src/components/Actions/Reverse.js\",\"/app/src/components/Actions/Sum.js\",\"/app/src/components/GameBoard.js\",\"/app/src/App.js\",\"/app/src/serviceWorker.js\",\"/app/src/index.js\"],\"names\":[\"GameContext\",\"createContext\",\"Display\",\"react_default\",\"a\",\"createElement\",\"Consumer\",\"_ref\",\"currentResult\",\"className\",\"Target\",\"targetResult\",\"Turns\",\"maxTurns\",\"currentTurns\",\"GameStatus\",\"gameState\",\"initialiseGame\",\"resetGame\",\"Row\",\"Col\",\"xs\",\"toString\",\"toLowerCase\",\"GameBoard_Turns\",\"GameBoard_Target\",\"Cheat\",\"takenTurns\",\"setCheat\",\"cheat\",\"onClick\",\"map\",\"button\",\"i\",\"key\",\"Buttons\",\"buttons\",\"Button\",\"AppendAction\",\"haveTurn\",\"isPossible\",\"getNextResult\",\"number\",\"disabled\",\"title\",\"AppendActionContainer\",\"Math\",\"floor\",\"random\",\"result\",\"parseInt\",\"value\",\"console\",\"log\",\"hash\",\"possible\",\"_ref2\",\"Append_AppendAction\",\"AddAction\",\"AddActionContainer\",\"Add_AddAction\",\"SubtractAction\",\"SubtractActionContainer\",\"Subtract_SubtractAction\",\"DivideAction\",\"DivideActionContainer\",\"props\",\"Divide_DivideAction\",\"MultiplyAction\",\"MultiplyActionContainer\",\"Multiply_MultiplyAction\",\"ReverseAction\",\"ReverseActionContainer\",\"Object\",\"toConsumableArray\",\"filter\",\"x\",\"reverse\",\"join\",\"length\",\"Reverse_ReverseAction\",\"SumAction\",\"SumActionContainer\",\"reduce\",\"y\",\"Sum_SumAction\",\"GameBoard\",\"_useContext\",\"useContext\",\"setGameState\",\"useEffect\",\"GameBoard_GameStatus\",\"GameBoard_Display\",\"GameBoard_Buttons\",\"GameBoard_Cheat\",\"GameBoardContainer\",\"_useState\",\"useState\",\"_useState2\",\"slicedToArray\",\"_useState3\",\"_useState4\",\"_useState5\",\"_useState6\",\"limitButtons\",\"setLimitButtons\",\"_useState7\",\"_useState8\",\"setButtons\",\"_useState9\",\"_useState10\",\"setTakenTurns\",\"_useState11\",\"_useState12\",\"setCurrentResult\",\"_useState13\",\"_useState14\",\"setTargetResult\",\"_useState15\",\"_useState16\",\"setMaxTurns\",\"_useState17\",\"_useState18\",\"setCurrentTurns\",\"_useState19\",\"_useState20\",\"startValue\",\"setStartValue\",\"_useState21\",\"_useState22\",\"limitTurns\",\"setLimitTurns\",\"getButton\",\"j\",\"NewButton\",\"possible_buttons\",\"Provider\",\"action\",\"startingValue\",\"new_buttons\",\"limit\",\"_loop\",\"tmp\",\"find\",\"concat\",\"newMaxTurns\",\"turns\",\"GameBoard_GameBoard\",\"App\",\"src_components_GameBoard\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import { createContext } from 'react'\\nexport const GameContext = createContext({})\\n\",\"import React from 'react'\\nimport { GameContext }  from '../../GameContext'\\nimport '../GameBoard.css'\\n\\nfunction Display() {\\n    return (\\n        <GameContext.Consumer>\\n            {({currentResult}) => (<div className={'display'}>{currentResult}</div>)}\\n        </GameContext.Consumer>\\n    )\\n}\\n\\nexport default Display\",\"import React from 'react'\\nimport { GameContext }  from '../../GameContext'\\nimport '../GameBoard.css'\\n\\nfunction Target() {\\n    return (\\n        <GameContext.Consumer>\\n            {({targetResult}) => (<div className={'target'}>Goal: {targetResult}</div>)}\\n        </GameContext.Consumer>\\n    )\\n}\\n\\nexport default Target\",\"import React from 'react'\\nimport { GameContext }  from '../../GameContext'\\nimport '../GameBoard.css'\\n\\nfunction Turns() {\\n    return (\\n        <GameContext.Consumer>\\n            {({maxTurns, currentTurns}) => (<div className={'moves'}>Moves: {maxTurns - currentTurns} </div>)}\\n        </GameContext.Consumer>\\n    )\\n}\\n\\nexport default Turns\",\"import React from \\\"react\\\";\\nimport { GameContext } from \\\"../../GameContext\\\";\\nimport \\\"../GameBoard.css\\\";\\nimport Target from \\\"../GameBoard/Target\\\";\\nimport Turns from \\\"../GameBoard/Turns\\\";\\n\\nimport { Row, Col, Button } from \\\"reactstrap\\\";\\nimport \\\"bootstrap/dist/css/bootstrap.css\\\";\\n\\nfunction GameStatus() {\\n  return (\\n    <GameContext.Consumer>\\n      {({ gameState, initialiseGame, currentTurns, resetGame }) => (\\n        <Row>\\n          <Col xs={4} className={'game-status ' + gameState.toString().toLowerCase()}>\\n          {gameState === \\\"ready\\\" ? <div className={'playing'}>Playing</div> : <div>{gameState}</div>}\\n\\n\\n          </Col>\\n          <Col xs={4}>\\n            <Turns />\\n          </Col>\\n          <Col xs={4}>\\n            <Target />\\n          </Col>\\n\\n        </Row>\\n      )}\\n    </GameContext.Consumer>\\n  );\\n}\\n\\nexport default GameStatus;\\n\",\"import React,  { useState }  from 'react'\\nimport { GameContext }  from '../../GameContext'\\nimport '../GameBoard.css'\\n\\nfunction Cheat() {\\n\\n    return (\\n      <GameContext.Consumer>\\n        {({ takenTurns, setCheat, cheat }) => (<div>\\n\\n            <button onClick={()=>setCheat(!cheat)}>{cheat ? 'disable':'enable'} cheat mode</button>\\n\\n            {cheat ?  \\n                (<div className={'buttons'}>{takenTurns.map((button, i) => <div key={'step-' + i}>{button.button}</div>)}</div>) : \\n                null}\\n            </div>            \\n        )}\\n      </GameContext.Consumer>\\n    );\\n  }\\n  \\n\\n  export default Cheat\",\"import React from \\\"react\\\";\\nimport { GameContext } from \\\"../../GameContext\\\";\\n\\nimport { Row, Col, Button } from \\\"reactstrap\\\";\\nimport \\\"bootstrap/dist/css/bootstrap.css\\\";\\n\\nimport \\\"../GameBoard.css\\\";\\n\\n\\nfunction Buttons() {\\n  return (\\n    <GameContext.Consumer>\\n      {({ buttons, initialiseGame, resetGame, gameState, cheat }) => (\\n        <Row className={\\\"buttons\\\"}>\\n          <Col className={\\\"game-button\\\"} xs={4}>\\n            {(cheat || gameState == 'Won') && <Button onClick={initialiseGame}>NEW</Button>}\\n          </Col>\\n          <Col className={\\\"game-button\\\"} xs={4}>\\n            {buttons && buttons[0] && buttons[0].button}\\n          </Col>\\n          <Col className={\\\"game-button\\\"} xs={4}>\\n            <Button onClick={resetGame}>RESET</Button>\\n          </Col>\\n\\n          <Col className={\\\"game-button\\\"} xs={4} />\\n          <Col className={\\\"game-button\\\"} xs={4}>\\n            {buttons && buttons[1] && buttons[1].button}\\n          </Col>\\n          <Col className={\\\"game-button\\\"} xs={4}>\\n            {buttons && buttons[2] && buttons[2].button}\\n          </Col>\\n\\n          <Col className={\\\"game-button\\\"} xs={4} />\\n          <Col className={\\\"game-button\\\"} xs={4}>\\n            {buttons && buttons[3] && buttons[3].button}\\n          </Col>\\n          <Col className={\\\"game-button\\\"} xs={4}>\\n            {buttons && buttons[4] && buttons[4].button}\\n          </Col>\\n        </Row>\\n      )}\\n    </GameContext.Consumer>\\n  );\\n}\\nexport default Buttons;\\n\",\"import React from \\\"react\\\";\\nimport { GameContext } from \\\"../../GameContext\\\";\\n\\nimport { Button } from \\\"reactstrap\\\";\\n\\nimport \\\"bootstrap/dist/css/bootstrap.css\\\";\\n\\nimport \\\"../GameBoard.css\\\";\\n\\nconst AppendAction = ({\\n  haveTurn,\\n  gameState,\\n  currentResult,\\n  isPossible,\\n  getNextResult,\\n  number\\n}) => {\\n\\n  return (\\n    <Button\\n      className={\\\"append\\\"}\\n      disabled={!isPossible(currentResult) || gameState !== \\\"ready\\\"}\\n      onClick={() => haveTurn(getNextResult)}\\n      title=\\\"Append digit to end - Apending 2 to 21 = 212\\\"\\n    >\\n      {number}\\n    </Button>\\n  );\\n};\\nconst AppendActionContainer = () => {\\n  const number =Math.floor(Math.random() * 9) + 1;\\n\\n\\n  const getNextResult = result => parseInt(result.toString() + number.toString());\\n\\n  const isPossible = (value) => {\\n    let possible = true\\n    console.log(\\\"Append Is Possible\\\",value, possible)\\n    \\n    return possible\\n  }\\n\\n  return {\\n    getNextResult: getNextResult,\\n    hash: \\\"append-\\\" + number,\\n\\n    possible: (value) => {\\n      return isPossible(value);\\n    },\\n\\n    button: (\\n      <GameContext.Consumer>\\n        {({ haveTurn, gameState, currentResult }) => <AppendAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} number={number} isPossible={isPossible} getNextResult={getNextResult} />}\\n      </GameContext.Consumer>\\n    )\\n  };\\n};\\n\\nexport default AppendActionContainer;\\n\",\"import React from \\\"react\\\";\\nimport { GameContext } from \\\"../../GameContext\\\";\\n\\nimport { Button } from \\\"reactstrap\\\";\\n\\nimport \\\"bootstrap/dist/css/bootstrap.css\\\";\\n\\nimport \\\"../GameBoard.css\\\";\\n\\nconst AddAction = ({\\n  haveTurn,\\n  gameState,\\n  currentResult,\\n  isPossible,\\n  getNextResult,\\n  number\\n}) => {\\n  return (\\n    <Button\\n      className={\\\"add\\\"}\\n      disabled={!isPossible(currentResult) || gameState !== \\\"ready\\\"}\\n      onClick={() => haveTurn(getNextResult)}\\n      title=\\\"Add digit to end - Apending 2 to 21 = 212\\\"\\n    >\\n     + {number}\\n    </Button>\\n  );\\n};\\nconst AddActionContainer = () => {\\n  const number =Math.floor(Math.random() * 9) + 1;\\n\\n\\n  const getNextResult = result => parseInt(result + number);\\n\\n  const isPossible = (value) => {\\n    let possible = true\\n    console.log(\\\"Add Is Possible\\\",value, possible)\\n    \\n    return possible\\n  }  \\n\\n  return {\\n    getNextResult: getNextResult,\\n    hash: \\\"add-\\\" + number,\\n\\n    possible: (value) => {\\n      return isPossible(value);\\n    },\\n\\n    button: (\\n      <GameContext.Consumer>\\n        {({ haveTurn, gameState, currentResult }) => <AddAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} number={number} isPossible={isPossible} getNextResult={getNextResult} />}\\n      </GameContext.Consumer>\\n    )\\n  };\\n};\\n\\nexport default AddActionContainer;\\n\",\"import React from \\\"react\\\";\\nimport { GameContext } from \\\"../../GameContext\\\";\\n\\nimport { Button } from \\\"reactstrap\\\";\\n\\nimport \\\"bootstrap/dist/css/bootstrap.css\\\";\\n\\nimport \\\"../GameBoard.css\\\";\\n\\nconst SubtractAction = ({\\n  haveTurn,\\n  gameState,\\n  currentResult,\\n  isPossible,\\n  getNextResult,\\n  number\\n}) => {\\n  return (\\n    <Button\\n      className={\\\"subtract\\\"}\\n      disabled={!isPossible(currentResult) || gameState !== \\\"ready\\\"}\\n      onClick={() => haveTurn(getNextResult)}\\n      title=\\\"Subtract button value from current result\\\"\\n    >\\n      - {number}\\n    </Button>\\n  );\\n};\\nconst SubtractActionContainer = () => {\\n  const number =Math.floor(Math.random() * 9) + 1;\\n\\n\\n  const getNextResult = result => parseInt(result - number);\\n\\n  const isPossible = (value) => {\\n    let possible = true\\n    console.log(\\\"Subtract Is Possible\\\",value, possible)\\n    \\n    return possible\\n  }  \\n\\n  return {\\n    getNextResult: getNextResult,\\n    hash: \\\"subtract-\\\" + number,\\n\\n    possible: (value) => {\\n      return isPossible();\\n    },\\n\\n    button: (\\n      <GameContext.Consumer>\\n        {({ haveTurn, gameState, currentResult }) => <SubtractAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} number={number} isPossible={isPossible} getNextResult={getNextResult} />}\\n      </GameContext.Consumer>\\n    )\\n  };\\n};\\n\\nexport default SubtractActionContainer;\\n\",\"import React, { useContext } from \\\"react\\\";\\nimport { GameContext } from \\\"../../GameContext\\\";\\n\\nimport { Button } from \\\"reactstrap\\\";\\n\\nimport \\\"bootstrap/dist/css/bootstrap.css\\\";\\n\\nimport \\\"../GameBoard.css\\\";\\n\\nconst DivideAction = ({\\n  haveTurn,\\n  gameState,\\n  currentResult,\\n  isPossible,\\n  getNextResult,\\n  number\\n}) => {\\n  return (\\n    <Button\\n      className={\\\"divide\\\"}\\n      disabled={!isPossible(currentResult) || gameState !== \\\"ready\\\"}\\n      onClick={() => haveTurn(getNextResult)}\\n      title=\\\"Divide current result by button value\\\"\\n    >\\n       / {number}\\n    </Button>\\n  );\\n};\\n\\nconst DivideActionContainer = props => {\\n    \\n\\n  const number =Math.floor(Math.random() * 3) + 1;\\n\\n\\n  const getNextResult = result => parseInt(result / number);\\n\\n\\n  const isPossible = (value) => {\\n    let possible = value > 1 && value % number === 0;\\n    console.log(\\\"Divide Is Possible\\\",value, possible)\\n    \\n    return possible\\n  }  \\n\\n  return {\\n    getNextResult: getNextResult,\\n    hash: \\\"divide-\\\" + number,\\n\\n    possible: (value) =>  isPossible(value),\\n\\n    button: (\\n      <GameContext.Consumer>\\n        {({ haveTurn, gameState, currentResult }) => <DivideAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} number={number} isPossible={isPossible} getNextResult={getNextResult} />}\\n      </GameContext.Consumer>\\n    )\\n  };\\n};\\n\\nexport default DivideActionContainer;\\n\",\"import React  from \\\"react\\\";\\nimport { GameContext } from \\\"../../GameContext\\\";\\n\\nimport { Button } from \\\"reactstrap\\\";\\n\\nimport \\\"bootstrap/dist/css/bootstrap.css\\\";\\n\\nimport \\\"../GameBoard.css\\\";\\n\\nconst MultiplyAction = ({\\n  haveTurn,\\n  gameState,\\n  currentResult,\\n  isPossible,\\n  getNextResult,\\n  number\\n}) => {\\n  return (\\n    <Button\\n      className={\\\"multiply\\\"}\\n      disabled={!isPossible(currentResult) || gameState !== \\\"ready\\\"}\\n      onClick={() => haveTurn(getNextResult)}\\n      title=\\\"Multiply current result by button value\\\"\\n    >\\n      X {number}\\n    </Button>\\n  );\\n};\\nconst MultiplyActionContainer = () => {\\n  const number =Math.floor(Math.random() * 3) + 2;\\n\\n  const getNextResult = result => parseInt(result * number);\\n\\n  \\n  const isPossible = (value) => {\\n    let possible = value > 0\\n    console.log(\\\"Multiply Is Possible\\\",value, possible)\\n    \\n    return possible\\n  }  \\n\\n  return {\\n    getNextResult: getNextResult,\\n    hash: \\\"multiply-\\\" + number,\\n\\n    possible: (value) => {\\n      return isPossible(value);\\n    },\\n\\n    button: (\\n      <GameContext.Consumer>\\n        {({ haveTurn, gameState, currentResult }) => <MultiplyAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} number={number} isPossible={isPossible} getNextResult={getNextResult} />}\\n      </GameContext.Consumer>\\n    )\\n  };\\n};\\n\\nexport default MultiplyActionContainer;\\n\",\"import React from \\\"react\\\";\\nimport { GameContext } from \\\"../../GameContext\\\";\\n\\nimport { Button } from \\\"reactstrap\\\";\\n\\nimport \\\"bootstrap/dist/css/bootstrap.css\\\";\\n\\nimport \\\"../GameBoard.css\\\";\\n\\nconst ReverseAction = ({\\n  haveTurn,\\n  gameState,\\n  currentResult,\\n  isPossible,\\n  getNextResult,\\n\\n}) => {\\n\\n  return (\\n    <Button\\n      className={\\\"reverse\\\"}\\n      disabled={!isPossible(currentResult) || gameState !== \\\"ready\\\"}\\n      onClick={() => haveTurn(getNextResult)}\\n      title=\\\"Reverse numbers 123 = 321\\\"\\n    >\\n      &lt;-&gt;\\n    </Button>\\n  );\\n};\\n\\n\\nconst ReverseActionContainer = () => {\\n  const getNextResult = result =>\\n    parseInt(\\n      (result < 0 ? \\\"-\\\" : \\\"\\\") +\\n        [...result.toString()]\\n          .filter(x => x.toString() !== \\\"-\\\")\\n          .reverse()\\n          .join(\\\"\\\")\\n    );\\n\\n  const isPossible = (value) => {\\n    let possible = value.toString().length > 1;\\n    console.log(\\\"Reverse Is Possible\\\",value, possible)\\n    \\n    return possible\\n  }  \\n\\n\\n  return {\\n    getNextResult: getNextResult,\\n    hash: \\\"reverse\\\",\\n\\n    possible: (value) => {\\n      return isPossible(value);\\n    },\\n\\n    button: (\\n      <GameContext.Consumer>\\n        {({ haveTurn, gameState, currentResult }) => (\\n          <ReverseAction\\n            currentResult={currentResult}\\n            haveTurn={haveTurn}\\n            gameState={gameState}\\n            isPossible={isPossible}\\n            getNextResult={getNextResult}\\n          />\\n        )}\\n      </GameContext.Consumer>\\n    )\\n  };\\n};\\n\\nexport default ReverseActionContainer;\\n\",\"import React, { useContext } from \\\"react\\\";\\nimport { GameContext } from \\\"../../GameContext\\\";\\n\\nimport { Button } from \\\"reactstrap\\\";\\n\\nimport \\\"bootstrap/dist/css/bootstrap.css\\\";\\n\\nimport \\\"../GameBoard.css\\\";\\n\\nconst SumAction = ({\\n  haveTurn,\\n  gameState,\\n  currentResult,\\n  isPossible,\\n  getNextResult\\n}) => {\\n  return (\\n    <Button\\n      className={\\\"sum\\\"}\\n      disabled={!isPossible(currentResult) || gameState !== \\\"ready\\\"}\\n      onClick={() => haveTurn(getNextResult)}\\n            title=\\\"Sum numbers - 13 = 1+3 = 4\\\"\\n>\\n      SUM\\n    </Button>\\n  );\\n};\\nconst SumActionContainer = () => {\\n\\n  const getNextResult = result => [...result.toString()].reduce((x, y) => parseInt(x) + parseInt(y));\\n\\n  const isPossible = (value) => {\\n    let possible =  value.toString().length > 1;\\n    console.log(\\\"Sum Is Possible\\\",value, possible)\\n    \\n    return possible\\n  }  \\n\\n  return {\\n    getNextResult: getNextResult,\\n    hash: \\\"sum\\\",\\n\\n    possible: (value) => {\\n      return isPossible(value);\\n    },\\n\\n    button: (\\n      <GameContext.Consumer>\\n        {({ haveTurn, gameState, currentResult }) => <SumAction currentResult={currentResult} haveTurn={haveTurn} gameState={gameState} isPossible={isPossible} getNextResult={getNextResult} />}\\n      </GameContext.Consumer>\\n    )\\n  };\\n};\\n\\nexport default SumActionContainer;\\n\",\"import React, { useState, useEffect, useContext } from \\\"react\\\";\\nimport { GameContext } from \\\"../GameContext\\\";\\nimport Display from \\\"./GameBoard/Display\\\";\\nimport GameStatus from \\\"./GameBoard/GameStatus\\\";\\nimport Cheat from \\\"./GameBoard/Cheat\\\";\\nimport Buttons from \\\"./GameBoard/Buttons\\\";\\nimport AppendAction from \\\"./Actions/Append\\\";\\nimport AddAction from \\\"./Actions/Add\\\";\\nimport SubtractAction from \\\"./Actions/Subtract\\\";\\nimport DivideAction from \\\"./Actions/Divide\\\";\\nimport MultiplyAction from \\\"./Actions/Multiply\\\";\\nimport ReverseAction from \\\"./Actions/Reverse\\\";\\nimport SumAction from \\\"./Actions/Sum\\\";\\n\\nconst GameBoard = () => {\\n  const {\\n    gameState,\\n    setGameState,\\n    targetResult,\\n    currentTurns,\\n    maxTurns,\\n    currentResult,\\n    initialiseGame,\\n    setCheat,\\n    cheat\\n  } = useContext(GameContext);\\n\\n  // Similar to componentDidMount and componentDidUpdate:\\n  useEffect(() => {\\n    // Update the document title using the browser API\\n    currentTurns === maxTurns &&\\n      setGameState(currentResult === targetResult ? \\\"Won\\\" : \\\"Lost\\\");\\n\\n    console.log(\\\"gameState\\\", gameState);\\n    gameState === \\\"init\\\" && initialiseGame();\\n\\n  });\\n\\n \\n\\n\\n  // setButtons([...buttons, <AddButton />]);\\n\\n  //   setState({ ...state, buttons: \\\"hello\\\" })\\n  //   <AppendButton />\\n\\n  return (\\n    <div className={\\\"gameboard\\\"}>\\n      <GameStatus />\\n      <Display />\\n      <Buttons />\\n      <Cheat />\\n    </div>\\n  );\\n};\\n\\nconst GameBoardContainer = props => {\\n\\n  const [cheat, setCheat] = useState(true)\\n\\n  const [gameState, setGameState] = useState(\\\"init\\\");\\n\\n  const [limitButtons, setLimitButtons] = useState(5);\\n\\n  const [buttons, setButtons] = useState([]);\\n  const [takenTurns, setTakenTurns] = useState([]);\\n\\n  const [currentResult, setCurrentResult] = useState(0);\\n\\n  const [targetResult, setTargetResult] = useState(0);\\n  const [maxTurns, setMaxTurns] = useState(0);\\n\\n  const [currentTurns, setCurrentTurns] = useState(0);\\n\\n  const [startValue, setStartValue] = useState(0);\\n\\n  const [limitTurns, setLimitTurns] = useState(0);\\n\\n  \\n  const resetGame = () => {\\n    setCurrentTurns(0);\\n    setCurrentResult(startValue);\\n    setGameState(\\\"ready\\\");\\n  };\\n\\n  const haveTurn = action => {\\n    setCurrentTurns(currentTurns + 1);\\n    setCurrentResult(action);\\n  };\\n  const getButton = j => {\\n    let NewButton = possible_buttons[~~(possible_buttons.length * Math.random())]\\n\\n    return NewButton();\\n  };\\n\\n  const possible_buttons = [\\n    AddAction,\\n    AppendAction,\\n    SubtractAction,\\n    ReverseAction,\\n    SumAction,\\n    MultiplyAction,\\n    DivideAction\\n  ];\\n\\n\\n  //   const targetTurn = action => setTargetResult(action);\\n  const initialiseGame = () => {\\n    setCurrentTurns(0);\\n    const startingValue = Math.floor(Math.random() * 100);\\n    setStartValue(startingValue);\\n    setCurrentResult(startingValue);\\n    setTargetResult(startingValue);\\n\\n    let i = 0; // failsafe\\n    let new_buttons = [];\\n\\n    // get random number of possible buttons\\n    let limit = Math.floor(Math.random() * limitButtons) + 1;\\n    while (new_buttons.length < limit && i++ < 100) {\\n      let tmp = getButton(i);\\n\\n      // don't include the same button twice\\n      if (new_buttons.find(button => button.hash === tmp.hash)) {\\n        continue;\\n      }\\n\\n      new_buttons = [...new_buttons, tmp];\\n    }\\n\\n    // store new buttons\\n    setButtons(new_buttons);\\n\\n    // generate some turns\\n    const newMaxTurns = Math.floor(Math.random() * limitTurns) + 3;\\n    setMaxTurns(newMaxTurns);\\n    let x = startingValue;\\n    i = 0; // failsafe\\n    let turns = [];\\n    while (turns.length < newMaxTurns && i++ < 100) {\\n      let button = new_buttons[~~(new_buttons.length * Math.random())];\\n\\n      // can we use this button with the 'current result' ?\\n      let possible = button.possible(x);\\n\\n      // if we can't take the action, don't use button\\n      if (!possible) continue;\\n\\n      turns = [...turns, button];\\n\\n      x = button.getNextResult(x) \\n      console.log('x', x)\\n    }\\n    setTargetResult(x)  \\n\\n    // store the turns that were taken to get to the result (cheat mode)\\n    setTakenTurns(turns);\\n\\n    setGameState(\\\"ready\\\");\\n  };\\n  return (\\n    <GameContext.Provider\\n      value={{\\n        limitButtons,\\n        setLimitButtons,  \\n        haveTurn,\\n        gameState,\\n        setGameState,\\n        currentResult,\\n        setCurrentResult,\\n        targetResult,\\n        setTargetResult,\\n        buttons,\\n        setButtons,\\n        takenTurns,\\n        setTakenTurns,\\n        currentTurns,\\n        setCurrentTurns,\\n        resetGame,\\n        maxTurns,\\n        setMaxTurns,\\n        startValue,\\n        setStartValue,\\n        limitTurns,\\n        setLimitTurns,\\n        initialiseGame,\\n        getButton,\\n        setCheat, \\n        cheat\\n      }}\\n    >\\n      {\\\" \\\"}\\n      <GameBoard />\\n    </GameContext.Provider>\\n  );\\n};\\n\\nexport default GameBoardContainer;\\n\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport GameBoard from './components/GameBoard'\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <GameBoard />\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{2:function(e,t,n){},22:function(e,t,n){e.exports=n(31)},27:function(e,t,n){},28:function(e,t,n){},31:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),u=n(14),s=n.n(u),l=(n(27),n(15)),o=n(16),c=n(20),i=n(17),m=n(21),b=(n(28),n(8)),f=n(4),v=Object(a.createContext)({});n(2);var g=function(){return r.a.createElement(v.Consumer,null,function(e){var t=e.currentResult;return r.a.createElement(\"div\",{className:\"display\"},t)})};var d=function(){return r.a.createElement(v.Consumer,null,function(e){var t=e.targetResult;return r.a.createElement(\"div\",{className:\"target\"},\"Goal: \",t)})};var h=function(){return r.a.createElement(v.Consumer,null,function(e){var t=e.maxTurns,n=e.currentTurns;return r.a.createElement(\"div\",{className:\"moves\"},\"Moves: \",t-n,\" \")})},E=n(32),R=n(33);n(5);var S=function(){return r.a.createElement(v.Consumer,null,function(e){var t=e.gameState;return e.initialiseGame,e.currentTurns,e.resetGame,r.a.createElement(E.a,null,r.a.createElement(R.a,{xs:4,className:\"game-status \"+t.toString().toLowerCase()},\"ready\"===t?r.a.createElement(\"div\",{className:\"playing\"},\"Playing\"):r.a.createElement(\"div\",null,t)),r.a.createElement(R.a,{xs:4},r.a.createElement(h,null)),r.a.createElement(R.a,{xs:4},r.a.createElement(d,null)))})};var N=function(){return r.a.createElement(v.Consumer,null,function(e){var t=e.takenTurns,n=e.setCheat,a=e.cheat;return r.a.createElement(\"div\",null,r.a.createElement(\"button\",{onClick:function(){return n(!a)}},a?\"disable\":\"enable\",\" cheat mode\"),a?r.a.createElement(\"div\",{className:\"buttons\"},t.map(function(e,t){return r.a.createElement(\"div\",{key:\"step-\"+t},e.button)})):null)})},p=n(34);var x=function(){return r.a.createElement(v.Consumer,null,function(e){var t=e.buttons,n=e.initialiseGame,a=e.resetGame,u=e.gameState,s=e.cheat;return r.a.createElement(E.a,{className:\"buttons\"},r.a.createElement(R.a,{className:\"game-button\",xs:4},(s||\"Won\"==u)&&r.a.createElement(p.a,{onClick:n},\"NEW\")),r.a.createElement(R.a,{className:\"game-button\",xs:4},t&&t[0]&&t[0].button),r.a.createElement(R.a,{className:\"game-button\",xs:4},r.a.createElement(p.a,{onClick:a},\"RESET\")),r.a.createElement(R.a,{className:\"game-button\",xs:4}),r.a.createElement(R.a,{className:\"game-button\",xs:4},t&&t[1]&&t[1].button),r.a.createElement(R.a,{className:\"game-button\",xs:4},t&&t[2]&&t[2].button),r.a.createElement(R.a,{className:\"game-button\",xs:4}),r.a.createElement(R.a,{className:\"game-button\",xs:4},t&&t[3]&&t[3].button),r.a.createElement(R.a,{className:\"game-button\",xs:4},t&&t[4]&&t[4].button))})},T=function(e){var t=e.haveTurn,n=e.gameState,a=e.currentResult,u=e.isPossible,s=e.getNextResult,l=e.number;return r.a.createElement(p.a,{className:\"append\",disabled:!u(a)||\"ready\"!==n,onClick:function(){return t(s)},title:\"Append digit to end - Apending 2 to 21 = 212\"},l)},j=function(){var e=Math.floor(9*Math.random())+1,t=function(t){return parseInt(t.toString()+e.toString())},n=function(e){return console.log(\"Append Is Possible\",e,!0),!0};return{getNextResult:t,hash:\"append-\"+e,possible:function(e){return n(e)},button:r.a.createElement(v.Consumer,null,function(a){var u=a.haveTurn,s=a.gameState,l=a.currentResult;return r.a.createElement(T,{currentResult:l,haveTurn:u,gameState:s,number:e,isPossible:n,getNextResult:t})})}},O=function(e){var t=e.haveTurn,n=e.gameState,a=e.currentResult,u=e.isPossible,s=e.getNextResult,l=e.number;return r.a.createElement(p.a,{className:\"add\",disabled:!u(a)||\"ready\"!==n,onClick:function(){return t(s)},title:\"Add digit to end - Apending 2 to 21 = 212\"},\"+ \",l)},C=function(){var e=Math.floor(9*Math.random())+1,t=function(t){return parseInt(t+e)},n=function(e){return console.log(\"Add Is Possible\",e,!0),!0};return{getNextResult:t,hash:\"add-\"+e,possible:function(e){return n(e)},button:r.a.createElement(v.Consumer,null,function(a){var u=a.haveTurn,s=a.gameState,l=a.currentResult;return r.a.createElement(O,{currentResult:l,haveTurn:u,gameState:s,number:e,isPossible:n,getNextResult:t})})}},y=function(e){var t=e.haveTurn,n=e.gameState,a=e.currentResult,u=e.isPossible,s=e.getNextResult,l=e.number;return r.a.createElement(p.a,{className:\"subtract\",disabled:!u(a)||\"ready\"!==n,onClick:function(){return t(s)},title:\"Subtract button value from current result\"},\"- \",l)},M=function(){var e=Math.floor(9*Math.random())+1,t=function(t){return parseInt(t-e)},n=function(e){return console.log(\"Subtract Is Possible\",e,!0),!0};return{getNextResult:t,hash:\"subtract-\"+e,possible:function(e){return n()},button:r.a.createElement(v.Consumer,null,function(a){var u=a.haveTurn,s=a.gameState,l=a.currentResult;return r.a.createElement(y,{currentResult:l,haveTurn:u,gameState:s,number:e,isPossible:n,getNextResult:t})})}},P=function(e){var t=e.haveTurn,n=e.gameState,a=e.currentResult,u=e.isPossible,s=e.getNextResult,l=e.number;return r.a.createElement(p.a,{className:\"divide\",disabled:!u(a)||\"ready\"!==n,onClick:function(){return t(s)},title:\"Divide current result by button value\"},\"/ \",l)},k=function(e){var t=Math.floor(3*Math.random())+1,n=function(e){return parseInt(e/t)},a=function(e){var n=e>1&&e%t===0;return console.log(\"Divide Is Possible\",e,n),n};return{getNextResult:n,hash:\"divide-\"+t,possible:function(e){return a(e)},button:r.a.createElement(v.Consumer,null,function(e){var u=e.haveTurn,s=e.gameState,l=e.currentResult;return r.a.createElement(P,{currentResult:l,haveTurn:u,gameState:s,number:t,isPossible:a,getNextResult:n})})}},I=function(e){var t=e.haveTurn,n=e.gameState,a=e.currentResult,u=e.isPossible,s=e.getNextResult,l=e.number;return r.a.createElement(p.a,{className:\"multiply\",disabled:!u(a)||\"ready\"!==n,onClick:function(){return t(s)},title:\"Multiply current result by button value\"},\"X \",l)},w=function(){var e=Math.floor(3*Math.random())+2,t=function(t){return parseInt(t*e)},n=function(e){var t=e>0;return console.log(\"Multiply Is Possible\",e,t),t};return{getNextResult:t,hash:\"multiply-\"+e,possible:function(e){return n(e)},button:r.a.createElement(v.Consumer,null,function(a){var u=a.haveTurn,s=a.gameState,l=a.currentResult;return r.a.createElement(I,{currentResult:l,haveTurn:u,gameState:s,number:e,isPossible:n,getNextResult:t})})}},G=function(e){var t=e.haveTurn,n=e.gameState,a=e.currentResult,u=e.isPossible,s=e.getNextResult;return r.a.createElement(p.a,{className:\"reverse\",disabled:!u(a)||\"ready\"!==n,onClick:function(){return t(s)},title:\"Reverse numbers 123 = 321\"},\"<->\")},A=function(){var e=function(e){return parseInt((e<0?\"-\":\"\")+Object(b.a)(e.toString()).filter(function(e){return\"-\"!==e.toString()}).reverse().join(\"\"))},t=function(e){var t=e.toString().length>1;return console.log(\"Reverse Is Possible\",e,t),t};return{getNextResult:e,hash:\"reverse\",possible:function(e){return t(e)},button:r.a.createElement(v.Consumer,null,function(n){var a=n.haveTurn,u=n.gameState,s=n.currentResult;return r.a.createElement(G,{currentResult:s,haveTurn:a,gameState:u,isPossible:t,getNextResult:e})})}},B=function(e){var t=e.haveTurn,n=e.gameState,a=e.currentResult,u=e.isPossible,s=e.getNextResult;return r.a.createElement(p.a,{className:\"sum\",disabled:!u(a)||\"ready\"!==n,onClick:function(){return t(s)},title:\"Sum numbers - 13 = 1+3 = 4\"},\"SUM\")},W=function(){var e=function(e){return Object(b.a)(e.toString()).reduce(function(e,t){return parseInt(e)+parseInt(t)})},t=function(e){var t=e.toString().length>1;return console.log(\"Sum Is Possible\",e,t),t};return{getNextResult:e,hash:\"sum\",possible:function(e){return t(e)},button:r.a.createElement(v.Consumer,null,function(n){var a=n.haveTurn,u=n.gameState,s=n.currentResult;return r.a.createElement(B,{currentResult:s,haveTurn:a,gameState:u,isPossible:t,getNextResult:e})})}},L=function(){var e=Object(a.useContext)(v),t=e.gameState,n=e.setGameState,u=e.targetResult,s=e.currentTurns,l=e.maxTurns,o=e.currentResult,c=e.initialiseGame;e.setCheat,e.cheat;return Object(a.useEffect)(function(){s===l&&n(o===u?\"Won\":\"Lost\"),console.log(\"gameState\",t),\"init\"===t&&c()}),r.a.createElement(\"div\",{className:\"gameboard\"},r.a.createElement(S,null),r.a.createElement(g,null),r.a.createElement(x,null),r.a.createElement(N,null))},D=function(e){var t=Object(a.useState)(!0),n=Object(f.a)(t,2),u=n[0],s=n[1],l=Object(a.useState)(\"init\"),o=Object(f.a)(l,2),c=o[0],i=o[1],m=Object(a.useState)(5),g=Object(f.a)(m,2),d=g[0],h=g[1],E=Object(a.useState)([]),R=Object(f.a)(E,2),S=R[0],N=R[1],p=Object(a.useState)([]),x=Object(f.a)(p,2),T=x[0],O=x[1],y=Object(a.useState)(0),P=Object(f.a)(y,2),I=P[0],G=P[1],B=Object(a.useState)(0),D=Object(f.a)(B,2),J=D[0],V=D[1],U=Object(a.useState)(0),X=Object(f.a)(U,2),$=X[0],q=X[1],z=Object(a.useState)(0),F=Object(f.a)(z,2),H=F[0],K=F[1],Q=Object(a.useState)(0),Y=Object(f.a)(Q,2),Z=Y[0],_=Y[1],ee=Object(a.useState)(0),te=Object(f.a)(ee,2),ne=te[0],ae=te[1],re=function(e){return(0,ue[~~(ue.length*Math.random())])()},ue=[C,j,M,A,W,w,k];return r.a.createElement(v.Provider,{value:{limitButtons:d,setLimitButtons:h,haveTurn:function(e){K(H+1),G(e)},gameState:c,setGameState:i,currentResult:I,setCurrentResult:G,targetResult:J,setTargetResult:V,buttons:S,setButtons:N,takenTurns:T,setTakenTurns:O,currentTurns:H,setCurrentTurns:K,resetGame:function(){K(0),G(Z),i(\"ready\")},maxTurns:$,setMaxTurns:q,startValue:Z,setStartValue:_,limitTurns:ne,setLimitTurns:ae,initialiseGame:function(){K(0);var e=Math.floor(100*Math.random());_(e),G(e),V(e);for(var t=0,n=[],a=Math.floor(Math.random()*d)+1,r=function(){var e=re();if(n.find(function(t){return t.hash===e.hash}))return\"continue\";n=[].concat(Object(b.a)(n),[e])};n.length<a&&t++<100;)r();N(n);var u=Math.floor(Math.random()*ne)+3;q(u);var s=e;t=0;for(var l=[];l.length<u&&t++<100;){var o=n[~~(n.length*Math.random())];o.possible(s)&&(l=[].concat(Object(b.a)(l),[o]),s=o.getNextResult(s),console.log(\"x\",s))}V(s),O(l),i(\"ready\")},getButton:re,setCheat:s,cheat:u}},\" \",r.a.createElement(L,null))},J=function(e){function t(){return Object(l.a)(this,t),Object(c.a)(this,Object(i.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(o.a)(t,[{key:\"render\",value:function(){return r.a.createElement(D,null)}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(J,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[22,1,2]]]);","extractedComments":[]}